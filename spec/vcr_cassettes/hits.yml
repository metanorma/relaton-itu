---
http_interactions:
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/Search
    body:
      encoding: UTF-8
      string: '{"json":"{\"Input\":\"ITU-T L.163\",\"Start\":0,\"Rows\":10,\"SortBy\":\"RELEVANCE\",\"ExactPhrase\":false,\"CollectionName\":\"General\",\"CollectionGroup\":\"Recommendations\",\"Sector\":\"t\",\"Criterias\":[{\"Name\":\"Search
        in\",\"Criterias\":[{\"Selected\":false,\"Value\":\"\",\"Label\":\"Name\",\"Target\":\"\\\\/name_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"Short
        description\",\"Target\":\"\\\\/short_description_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"File
        content\",\"Target\":\"\\\\/file\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0}],\"ShowCheckbox\":true,\"Selected\":false}],\"Topics\":\"\",\"ClientData\":{},\"Language\":\"en\",\"SearchType\":\"All\"}"}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '18897'
      Date:
      - Wed, 14 Apr 2021 11:29:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - GSCookie=QueryId=&CookieId=SkP/0rvX2vpHWCrmEYomGzVxoTBBZM4OgcYyBMFg8vgk38lHYEiqupGWR5BGQTB3DqEoVjCcSRX7Umb9e5FX2A==;
        domain=www.itu.int; expires=Fri, 14-Apr-2023 11:29:28 GMT; path=/
      - GSCookie=QueryId=3884941&CookieId=SkP/0rvX2vpHWCrmEYomGzVxoTBBZM4OgcYyBMFg8vgk38lHYEiqupGWR5BGQTB3DqEoVjCcSRX7Umb9e5FX2A==;
        domain=www.itu.int; expires=Fri, 14-Apr-2023 11:29:28 GMT; path=/
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/14547-en&page=1&position=9
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Wed, 14 Apr 2021 11:29:28 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/14547-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/14547-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/13786-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Wed, 14 Apr 2021 11:29:28 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/13786-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/13786-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/14564-en&page=1&position=8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Wed, 14 Apr 2021 11:29:28 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/14564-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/14564-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/14084-en&page=1&position=7
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Wed, 14 Apr 2021 11:29:28 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/14084-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/14084-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/14547-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/14547-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/13786-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/13786-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/14564-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/14564-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/14084-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/14084-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/13786-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:30 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13786&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:30 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13786&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13786&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/14547-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:30 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14547&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:30 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14547&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14547&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:29 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/14084-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:30 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14084&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:30 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14084&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14084&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/14564-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:30 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14564&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:30 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14564&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14564&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14547
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14547&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14547&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13786
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13786&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13786&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14564
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14564&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14564&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14084
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Wed, 14 Apr 2021 11:29:29 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14084&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14084&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:30 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13786
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:33 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:33 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14084
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:33 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:33 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14564
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:32 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:33 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/l/T-REC-L.163-201811-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Etag:
      - '"94eb280c5d4d41:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Thu, 07 Mar 2019 09:06:07 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. L.163 (11/2018) Criteria for
        optical fibre cable\r\ninstallation with minimal existing infrastructure </title>\r\n<style>\r\n<!--\r\n
        /* Font Definitions */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2
        4 5 3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2E74B5;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2E74B5;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 842.0pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"100%\"\r\n style='border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=\"_Hlk514882656\"></a><a\r\n
        \ name=isume><span lang=EN-US>Summary</span></a></h3>\r\n  <p class=MsoNormal
        style='text-indent:-.1pt;layout-grid-mode:char'>Recommendation\r\n  ITU-T
        L.163 describes criteria for the installation of optical fibre cables\r\n
        \ defined in Recommendation ITU-T L.110 in remote areas with lack of usual\r\n
        \ infrastructure for installation including the procedures of cable-route\r\n
        \ planning, cable selection, cable-installation scheme selection, cable tension\r\n
        \ and temperature consideration and the handling, bend protection and\r\n
        \ river/lake closing of the cable together with pilot tests and training for\r\n
        \ installation.</p>\r\n  <p class=MsoNormal style='text-indent:-.1pt'>This
        Recommendation also\r\n  describes how to mitigate the considerable risks
        and/or issues to which the\r\n  optical fibre cable may be exposed when infrastructures
        are minimal during\r\n  installation, maintenance and operation procedures.</p>\r\n
        \ </td>\r\n </tr>\r\n</table>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n<p
        class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/l/T-REC-L.1470-202001-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:33 GMT
      Content-Type:
      - text/html
      Etag:
      - '"271ce855927d61:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 11 May 2020 06:00:50 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PGh0bWw+DQoNCjxoZWFkPg0KPG1ldGEgaHR0cC1lcXVpdj1Db250ZW50LVR5cGUgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXdpbmRvd3MtMTI1MiI+DQo8bWV0YSBuYW1lPUdlbmVyYXRvciBjb250ZW50PSJNaWNyb3NvZnQgV29yZCAxNSAoZmlsdGVyZWQpIj4NCjx0aXRsZT5TdW1tYXJ5IC0gSVRVLVQgUmVjLiBMLjE0NzAgKDAxLzIwMjApIEdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucw0KdHJhamVjdG9yaWVzIGZvciB0aGUgaW5mb3JtYXRpb24gYW5kIGNvbW11bmljYXRpb24gdGVjaG5vbG9neSBzZWN0b3IgY29tcGF0aWJsZQ0Kd2l0aCB0aGUgVU5GQ0NDIFBhcmlzIEFncmVlbWVudCA8L3RpdGxlPg0KPHN0eWxlPg0KPCEtLQ0KIC8qIEZvbnQgRGVmaW5pdGlvbnMgKi8NCiBAZm9udC1mYWNlDQoJe2ZvbnQtZmFtaWx5OiJDYW1icmlhIE1hdGgiOw0KCXBhbm9zZS0xOjIgNCA1IDMgNSA0IDYgMyAyIDQ7fQ0KIC8qIFN0eWxlIERlZmluaXRpb25zICovDQogcC5Nc29Ob3JtYWwsIGxpLk1zb05vcm1hbCwgZGl2Lk1zb05vcm1hbA0KCXttYXJnaW4tdG9wOjYuMHB0Ow0KCW1hcmdpbi1yaWdodDowY207DQoJbWFyZ2luLWJvdHRvbTowY207DQoJbWFyZ2luLWxlZnQ6MGNtOw0KCW1hcmdpbi1ib3R0b206LjAwMDFwdDsNCgl0ZXh0LWFsaWduOmp1c3RpZnk7DQoJcHVuY3R1YXRpb24td3JhcDpzaW1wbGU7DQoJdGV4dC1hdXRvc3BhY2U6bm9uZTsNCglmb250LXNpemU6MTIuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmO30NCmgxDQoJe21zby1zdHlsZS1saW5rOiJIZWFkaW5nIDEgQ2hhciI7DQoJbWFyZ2luLXRvcDoxMi4wcHQ7DQoJbWFyZ2luLXJpZ2h0OjBjbTsNCgltYXJnaW4tYm90dG9tOjBjbTsNCgltYXJnaW4tbGVmdDowY207DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtYWxpZ246anVzdGlmeTsNCglwYWdlLWJyZWFrLWFmdGVyOmF2b2lkOw0KCXB1bmN0dWF0aW9uLXdyYXA6c2ltcGxlOw0KCXRleHQtYXV0b3NwYWNlOm5vbmU7DQoJZm9udC1zaXplOjE2LjBwdDsNCglmb250LWZhbWlseToiQ2FsaWJyaSBMaWdodCIsc2Fucy1zZXJpZjsNCgljb2xvcjojMkY1NDk2Ow0KCWZvbnQtd2VpZ2h0Om5vcm1hbDt9DQpoMw0KCXttc28tc3R5bGUtbGluazoiSGVhZGluZyAzIENoYXIiOw0KCW1hcmdpbi10b3A6OC4wcHQ7DQoJbWFyZ2luLXJpZ2h0OjBjbTsNCgltYXJnaW4tYm90dG9tOjBjbTsNCgltYXJnaW4tbGVmdDozOS43cHQ7DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtaW5kZW50Oi0zOS43cHQ7DQoJcGFnZS1icmVhay1hZnRlcjphdm9pZDsNCglwdW5jdHVhdGlvbi13cmFwOnNpbXBsZTsNCgl0ZXh0LWF1dG9zcGFjZTpub25lOw0KCWZvbnQtc2l6ZToxMi4wcHQ7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7fQ0KcC5Nc29IZWFkZXIsIGxpLk1zb0hlYWRlciwgZGl2Lk1zb0hlYWRlcg0KCXttc28tc3R5bGUtbGluazoiSGVhZGVyIENoYXIiOw0KCW1hcmdpbjowY207DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtYWxpZ246Y2VudGVyOw0KCXB1bmN0dWF0aW9uLXdyYXA6c2ltcGxlOw0KCXRleHQtYXV0b3NwYWNlOm5vbmU7DQoJZm9udC1zaXplOjkuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmO30NCnNwYW4uSGVhZGluZzNDaGFyDQoJe21zby1zdHlsZS1uYW1lOiJIZWFkaW5nIDMgQ2hhciI7DQoJbXNvLXN0eWxlLWxpbms6IkhlYWRpbmcgMyI7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7DQoJZm9udC13ZWlnaHQ6Ym9sZDt9DQpzcGFuLkhlYWRlckNoYXINCgl7bXNvLXN0eWxlLW5hbWU6IkhlYWRlciBDaGFyIjsNCgltc28tc3R5bGUtbGluazpIZWFkZXI7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7fQ0KcC5Gb290ZXJRUCwgbGkuRm9vdGVyUVAsIGRpdi5Gb290ZXJRUA0KCXttc28tc3R5bGUtbmFtZTpGb290ZXJfUVA7DQoJbWFyZ2luOjBjbTsNCgltYXJnaW4tYm90dG9tOi4wMDAxcHQ7DQoJcHVuY3R1YXRpb24td3JhcDpzaW1wbGU7DQoJdGV4dC1hdXRvc3BhY2U6bm9uZTsNCglmb250LXNpemU6MTEuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmOw0KCWZvbnQtd2VpZ2h0OmJvbGQ7fQ0Kc3Bhbi5IZWFkaW5nMUNoYXINCgl7bXNvLXN0eWxlLW5hbWU6IkhlYWRpbmcgMSBDaGFyIjsNCgltc28tc3R5bGUtbGluazoiSGVhZGluZyAxIjsNCglmb250LWZhbWlseToiQ2FsaWJyaSBMaWdodCIsc2Fucy1zZXJpZjsNCgljb2xvcjojMkY1NDk2O30NCi5Nc29DaHBEZWZhdWx0DQoJe2ZvbnQtZmFtaWx5OiJDYWxpYnJpIixzYW5zLXNlcmlmO30NCi5Nc29QYXBEZWZhdWx0DQoJe21hcmdpbi1ib3R0b206OC4wcHQ7DQoJbGluZS1oZWlnaHQ6MTA3JTt9DQpAcGFnZSBXb3JkU2VjdGlvbjENCgl7c2l6ZToyMS4wY20gODQyLjBwdDsNCgltYXJnaW46NTQuNDVwdCA1NC40NXB0IDU0LjQ1cHQgNTQuNDVwdDt9DQpkaXYuV29yZFNlY3Rpb24xDQoJe3BhZ2U6V29yZFNlY3Rpb24xO30NCi0tPg0KPC9zdHlsZT4NCg0KPC9oZWFkPg0KDQo8Ym9keSBsYW5nPUVOLUdCPg0KDQo8ZGl2IGNsYXNzPVdvcmRTZWN0aW9uMT4NCg0KPHRhYmxlIGNsYXNzPU1zb05vcm1hbFRhYmxlIGJvcmRlcj0wIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCB3aWR0aD0iMTAyJSINCiBzdHlsZT0nYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlJz4NCiA8dHI+DQogIDx0ZCB3aWR0aD0iMTAwJSIgdmFsaWduPXRvcCBzdHlsZT0nd2lkdGg6MTAwLjAlO3BhZGRpbmc6MGNtIDUuNHB0IDBjbSA1LjRwdCc+DQogIDxoMyBzdHlsZT0nbWFyZ2luLWxlZnQ6MGNtO3RleHQtaW5kZW50OjBjbSc+PGEgbmFtZT1pc3VtZT5TdW1tYXJ5PC9hPjwvaDM+DQogIDxwIGNsYXNzPU1zb05vcm1hbD5SZWNvbW1lbmRhdGlvbiBJVFUtVCBMLjE0NzAgcHJvdmlkZXMgZGV0YWlsZWQgdHJhamVjdG9yaWVzDQogIG9mIGdyZWVuaG91c2UgZ2FzIChHSEcpIGVtaXNzaW9ucyBmb3IgdGhlIGdsb2JhbCBpbmZvcm1hdGlvbiBhbmQNCiAgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5PHNwYW4gc3R5bGU9J2ZvbnQtc2l6ZToxMS4wcHQnPiAoPC9zcGFuPklDVCkgc2VjdG9yDQogIGFuZCBzdWItc2VjdG9ycyB0aGF0IGFyZSBxdWFudGlmaWVkIGZvciB0aGUgeWVhciAyMDE1IGFuZCBlc3RpbWF0ZWQgZm9yIDIwMjAsDQogIDIwMjUgYW5kIDIwMzAuIEluIGFkZGl0aW9uLCBSZWNvbW1lbmRhdGlvbiBJVFUtVCBMLjE0NzAgZXN0YWJsaXNoZXMgYQ0KICBsb25nLXRlcm0gYW1iaXRpb24gZm9yIDIwNTAuIFRoZSB0cmFqZWN0b3JpZXMsIHRoZSBsb25nLXRlcm0gYW1iaXRpb24gYW5kIHRoZQ0KICAyMDE1IGJhc2VsaW5lIGhhdmUgYmVlbiBkZXJpdmVkIGluIGFjY29yZGFuY2Ugd2l0aCBSZWNvbW1lbmRhdGlvbiBJVFUtVA0KICBMLjE0NTAgYW5kIHRocm91Z2ggY29tcGxlbWVudGFyeSBtZXRob2RzIGluIHN1cHBvcnQgb2YgdGhlIDEuNTxzcGFuDQogIHN0eWxlPSdmb250LWZhbWlseTpTeW1ib2wnPrA8L3NwYW4+QyBvYmplY3RpdmUgZGVzY3JpYmVkIGJ5IHRoZSBJUENDIGluIGl0cyA8aT5TcGVjaWFsDQogIHJlcG9ydDogR2xvYmFsIHdhcm1pbmcgb2YgMS41PC9pPjxzcGFuIHN0eWxlPSdmb250LWZhbWlseTpTeW1ib2wnPrA8L3NwYW4+QzxpPg0KICA8L2k+YW5kIGluIHN1cHBvcnQgb2YgdGhlIFNjaWVuY2UtYmFzZWQgVGFyZ2V0cyAoU0JUKSBpbml0aWF0aXZlPGk+LjwvaT48L3A+DQogIDwvdGQ+DQogPC90cj4NCjwvdGFibGU+DQoNCjxwIGNsYXNzPU1zb05vcm1hbD48c3BhbiBzdHlsZT0nZm9udC1zaXplOjUyLjBwdCc+Jm5ic3A7PC9zcGFuPjwvcD4NCg0KPHAgY2xhc3M9TXNvTm9ybWFsPiZuYnNwOzwvcD4NCg0KPC9kaXY+DQoNCjwvYm9keT4NCg0KPC9odG1sPg0K
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/l/T-REC-L.1024-202101-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Etag:
      - '"5181ff16f014d71:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Tue, 09 Mar 2021 14:25:44 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PGh0bWw+DQoNCjxoZWFkPg0KPG1ldGEgaHR0cC1lcXVpdj1Db250ZW50LVR5cGUgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXdpbmRvd3MtMTI1MiI+DQo8bWV0YSBuYW1lPUdlbmVyYXRvciBjb250ZW50PSJNaWNyb3NvZnQgV29yZCAxNSAoZmlsdGVyZWQpIj4NCjx0aXRsZT5TdW1tYXJ5IC0gSVRVLVQgUmVjLiBMLjEwMjQgKDAxLzIwMjEpIFRoZSBwb3RlbnRpYWwgaW1wYWN0IG9mIHNlbGxpbmcNCnNlcnZpY2VzIGluc3RlYWQgb2YgZXF1aXBtZW50IG9uIHdhc3RlIGNyZWF0aW9uIGFuZCB0aGUgZW52aXJvbm1lbnQgliBFZmZlY3RzDQpvbiBnbG9iYWwgaW5mb3JtYXRpb24gYW5kIGNvbW11bmljYXRpb24gdGVjaG5vbG9neSA8L3RpdGxlPg0KPHN0eWxlPg0KPCEtLQ0KIC8qIEZvbnQgRGVmaW5pdGlvbnMgKi8NCiBAZm9udC1mYWNlDQoJe2ZvbnQtZmFtaWx5OiJDYW1icmlhIE1hdGgiOw0KCXBhbm9zZS0xOjIgNCA1IDMgNSA0IDYgMyAyIDQ7fQ0KIC8qIFN0eWxlIERlZmluaXRpb25zICovDQogcC5Nc29Ob3JtYWwsIGxpLk1zb05vcm1hbCwgZGl2Lk1zb05vcm1hbA0KCXttYXJnaW4tdG9wOjYuMHB0Ow0KCW1hcmdpbi1yaWdodDowY207DQoJbWFyZ2luLWJvdHRvbTowY207DQoJbWFyZ2luLWxlZnQ6MGNtOw0KCW1hcmdpbi1ib3R0b206LjAwMDFwdDsNCgl0ZXh0LWFsaWduOmp1c3RpZnk7DQoJcHVuY3R1YXRpb24td3JhcDpzaW1wbGU7DQoJdGV4dC1hdXRvc3BhY2U6bm9uZTsNCglmb250LXNpemU6MTIuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmO30NCmgxDQoJe21zby1zdHlsZS1saW5rOiJIZWFkaW5nIDEgQ2hhciI7DQoJbWFyZ2luLXRvcDoxMi4wcHQ7DQoJbWFyZ2luLXJpZ2h0OjBjbTsNCgltYXJnaW4tYm90dG9tOjBjbTsNCgltYXJnaW4tbGVmdDowY207DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtYWxpZ246anVzdGlmeTsNCglwYWdlLWJyZWFrLWFmdGVyOmF2b2lkOw0KCXB1bmN0dWF0aW9uLXdyYXA6c2ltcGxlOw0KCXRleHQtYXV0b3NwYWNlOm5vbmU7DQoJZm9udC1zaXplOjE2LjBwdDsNCglmb250LWZhbWlseToiQ2FsaWJyaSBMaWdodCIsc2Fucy1zZXJpZjsNCgljb2xvcjojMkY1NDk2Ow0KCWZvbnQtd2VpZ2h0Om5vcm1hbDt9DQpoMw0KCXttc28tc3R5bGUtbGluazoiSGVhZGluZyAzIENoYXIiOw0KCW1hcmdpbi10b3A6OC4wcHQ7DQoJbWFyZ2luLXJpZ2h0OjBjbTsNCgltYXJnaW4tYm90dG9tOjBjbTsNCgltYXJnaW4tbGVmdDozOS43cHQ7DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtaW5kZW50Oi0zOS43cHQ7DQoJcGFnZS1icmVhay1hZnRlcjphdm9pZDsNCglwdW5jdHVhdGlvbi13cmFwOnNpbXBsZTsNCgl0ZXh0LWF1dG9zcGFjZTpub25lOw0KCWZvbnQtc2l6ZToxMi4wcHQ7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7fQ0KcC5Nc29IZWFkZXIsIGxpLk1zb0hlYWRlciwgZGl2Lk1zb0hlYWRlcg0KCXttc28tc3R5bGUtbGluazoiSGVhZGVyIENoYXIiOw0KCW1hcmdpbjowY207DQoJbWFyZ2luLWJvdHRvbTouMDAwMXB0Ow0KCXRleHQtYWxpZ246Y2VudGVyOw0KCXB1bmN0dWF0aW9uLXdyYXA6c2ltcGxlOw0KCXRleHQtYXV0b3NwYWNlOm5vbmU7DQoJZm9udC1zaXplOjkuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmO30NCnNwYW4uSGVhZGluZzNDaGFyDQoJe21zby1zdHlsZS1uYW1lOiJIZWFkaW5nIDMgQ2hhciI7DQoJbXNvLXN0eWxlLWxpbms6IkhlYWRpbmcgMyI7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7DQoJZm9udC13ZWlnaHQ6Ym9sZDt9DQpzcGFuLkhlYWRlckNoYXINCgl7bXNvLXN0eWxlLW5hbWU6IkhlYWRlciBDaGFyIjsNCgltc28tc3R5bGUtbGluazpIZWFkZXI7DQoJZm9udC1mYW1pbHk6IlRpbWVzIE5ldyBSb21hbiIsc2VyaWY7fQ0KcC5Gb290ZXJRUCwgbGkuRm9vdGVyUVAsIGRpdi5Gb290ZXJRUA0KCXttc28tc3R5bGUtbmFtZTpGb290ZXJfUVA7DQoJbWFyZ2luOjBjbTsNCgltYXJnaW4tYm90dG9tOi4wMDAxcHQ7DQoJcHVuY3R1YXRpb24td3JhcDpzaW1wbGU7DQoJdGV4dC1hdXRvc3BhY2U6bm9uZTsNCglmb250LXNpemU6MTEuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLHNlcmlmOw0KCWZvbnQtd2VpZ2h0OmJvbGQ7fQ0Kc3Bhbi5IZWFkaW5nMUNoYXINCgl7bXNvLXN0eWxlLW5hbWU6IkhlYWRpbmcgMSBDaGFyIjsNCgltc28tc3R5bGUtbGluazoiSGVhZGluZyAxIjsNCglmb250LWZhbWlseToiQ2FsaWJyaSBMaWdodCIsc2Fucy1zZXJpZjsNCgljb2xvcjojMkY1NDk2O30NCi5Nc29DaHBEZWZhdWx0DQoJe2ZvbnQtZmFtaWx5OiJDYWxpYnJpIixzYW5zLXNlcmlmO30NCi5Nc29QYXBEZWZhdWx0DQoJe21hcmdpbi1ib3R0b206OC4wcHQ7DQoJbGluZS1oZWlnaHQ6MTA3JTt9DQpAcGFnZSBXb3JkU2VjdGlvbjENCgl7c2l6ZToyMS4wY20gODQyLjBwdDsNCgltYXJnaW46NTQuNDVwdCA1NC40NXB0IDU0LjQ1cHQgNTQuNDVwdDt9DQpkaXYuV29yZFNlY3Rpb24xDQoJe3BhZ2U6V29yZFNlY3Rpb24xO30NCi0tPg0KPC9zdHlsZT4NCg0KPC9oZWFkPg0KDQo8Ym9keSBsYW5nPUVOLUdCPg0KDQo8ZGl2IGNsYXNzPVdvcmRTZWN0aW9uMT4NCg0KPHRhYmxlIGNsYXNzPU1zb05vcm1hbFRhYmxlIGJvcmRlcj0wIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCB3aWR0aD0iMTAyJSINCiBzdHlsZT0nYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlJz4NCiA8dHI+DQogIDx0ZCB3aWR0aD0iMTAwJSIgdmFsaWduPXRvcCBzdHlsZT0nd2lkdGg6MTAwLjAlO3BhZGRpbmc6MGNtIDUuNHB0IDBjbSA1LjRwdCc+DQogIDxoMyBzdHlsZT0nbWFyZ2luLWxlZnQ6MGNtO3RleHQtaW5kZW50OjBjbSc+PGEgbmFtZT1pc3VtZT5TdW1tYXJ5PC9hPjwvaDM+DQogIDxwIGNsYXNzPU1zb05vcm1hbD5SZWNvbW1lbmRhdGlvbiBJVFUtVCBMLjEwMjQgdXRpbGl6ZXMgaW5mb3JtYXRpb24gY29tcGlsZWQNCiAgZnJvbSBzdGFrZWhvbGRlcnMgdGhhdCBwcm92aWRlcyBpbnNpZ2h0cyBpbnRvIGNhc2VzIGluIHRoZSBpbmZvcm1hdGlvbiBhbmQNCiAgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IChJQ1QpIGVjb3N5c3RlbSwgaW4gd2hpY2ggSUNUIGdvb2RzIGFyZSBzb2xkIGFzDQogIHNlcnZpY2VzIG9yIHN1YnNjcmlwdGlvbnMgcmF0aGVyIHRoYW4gcHJvZHVjdHMuIEN1cnJlbnRseSwgdGhlc2UgY2FzZXMgYXJlDQogIG5vdCBjbGVhcmx5IHVuZGVyc3Rvb2QgZnJvbSBhbiBlbnZpcm9ubWVudGFsIHBvaW50IG9mIHZpZXcuPC9wPg0KICA8cCBjbGFzcz1Nc29Ob3JtYWw+Q3VycmVudCBlc3RpbWF0ZXMgYXJlIHRoYXQgYmlsbGlvbnMgb2YgbmV3IElDVCBnb29kcyCWDQogIHNtYXJ0cGhvbmVzIGFuZCBvdGhlcnMmbmJzcDuWIGFyZSBzb2xkIGFubnVhbGx5IGFuZCBzYWxlcyBhcmUgZXhwZWN0ZWQgdG8gYmUNCiAgaGlnaGVyIGluIDIwMjUgdGhhbiBpbiAyMDIwLjwvcD4NCiAgPHAgY2xhc3M9TXNvTm9ybWFsPjxzcGFuIHN0eWxlPSdsZXR0ZXItc3BhY2luZzotLjFwdCc+QnVzaW5lc3MgbW9kZWxzIGJhc2VkDQogIG9uIHNlcnZpdGl6YXRpb24gd2hpY2ggd291bGQmbmJzcDuWIG1vc3QgZWZmZWN0aXZlbHkmbmJzcDuWIGltcHJvdmUgdGhlDQogIGNpcmN1bGFyaXR5IG9mIHRoZXNlIElDVCBnb29kcyBhcmUgbm90IHdlbGwgdW5kZXJzdG9vZCwgZS5nLiwgcHJvbG9uZ2luZyB0aGUNCiAgbGlmZXRpbWUgb3IgaW5jcmVhc2luZyB0aGUgZS13YXN0ZSBjb2xsZWN0aW9uIHJhdGUuPC9zcGFuPjwvcD4NCiAgPHAgY2xhc3M9TXNvTm9ybWFsPiZuYnNwOzwvcD4NCiAgPC90ZD4NCiA8L3RyPg0KPC90YWJsZT4NCg0KPHAgY2xhc3M9TXNvTm9ybWFsPjxzcGFuIHN0eWxlPSdmb250LXNpemU6NTIuMHB0Jz4mbmJzcDs8L3NwYW4+PC9wPg0KDQo8cCBjbGFzcz1Nc29Ob3JtYWw+Jm5ic3A7PC9wPg0KDQo8L2Rpdj4NCg0KPC9ib2R5Pg0KDQo8L2h0bWw+DQo=
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/1895-en&page=1&position=6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '159'
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/1895-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/1895-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14547
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:33 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/13295-en&page=1&position=5
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/13295-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/13295-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/3394-en&page=1&position=4
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '159'
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/3394-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/3394-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/1895-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/1895-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/13295-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/13295-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/3394-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/3394-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/l/T-REC-L.Sup39-202009-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Content-Type:
      - text/html
      Etag:
      - '"a32c2650ceced61:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Thu, 10 Dec 2020 08:27:35 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. Series L Supplement&nbsp;39 (09/2020)
        Optical fibre\r\ncable Recommendations and standardization guideline </title>\r\n<style>\r\n<!--\r\n
        /* Font Definitions */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2
        4 5 3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2F5496;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2F5496;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 842.0pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"102%\"\r\n style='border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=isume>Summary</a></h3>\r\n
        \ <p class=MsoNormal>Supplement 39 to ITU-T L-series Recommendations provides\r\n
        \ information on the guideline used in the development of optical fibre cable\r\n
        \ Recommendations. The guideline also helps readers to understand the organization\r\n
        \ of the ITU-T L.100-series cable Recommendations.</p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p
        class=MsoNormal>&nbsp;</p>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/1895-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=1895&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:35 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=1895&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=1895&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/13295-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13295&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:35 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13295&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13295&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:34 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=1895
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '277'
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=1895&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=1895&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13295
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13295&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13295&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/9306-en&page=1&position=3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '159'
      Date:
      - Wed, 14 Apr 2021 11:29:34 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/9306-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/9306-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/3394-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=3394&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:35 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=3394&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=3394&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/9306-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/9306-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=3394
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '277'
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=3394&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=3394&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/9306-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=9306&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:35 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=9306&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=9306&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=9306
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '277'
      Date:
      - Wed, 14 Apr 2021 11:29:35 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=9306&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=9306&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:35 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13295
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:37 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:37 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/l/T-REC-L.110-201708-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:37 GMT
      Content-Type:
      - text/html
      Etag:
      - '"1f27f8fe45ad31:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Fri, 10 Nov 2017 09:19:22 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. L.110 (08/2017) Optical fibre
        cables for direct\r\nsurface application </title>\r\n<style>\r\n<!--\r\n /*
        Font Definitions */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2
        4 5 3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2E74B5;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2E74B5;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 842.0pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"100%\"\r\n style='margin-left:5.4pt;border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=isume><span
        lang=EN-US>Summary</span></a></h3>\r\n  <p class=MsoNormal>Recommendation
        ITU-T L.110 describes characteristics, construction\r\n  and test methods
        of optical fibre cables for direct surface application.\r\n  First, in order
        that an optical fibre demonstrates sufficient performance,\r\n  characteristics
        that a cable should have are described. Then, the method of\r\n  examining
        whether the cable has the required characteristic is described.</p>\r\n  </td>\r\n
        </tr>\r\n</table>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=3394
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:38 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/8655-en&page=1&position=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '159'
      Date:
      - Wed, 14 Apr 2021 11:29:37 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/8655-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/8655-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=1895
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:37 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/8655-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:38 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/8655-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/5388-en&page=1&position=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '159'
      Date:
      - Wed, 14 Apr 2021 11:29:38 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/5388-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/5388-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:38 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/8655-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:39 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=8655&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:39 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=8655&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=8655&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:39 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/5388-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:39 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/5388-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:39 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=8655
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '277'
      Date:
      - Wed, 14 Apr 2021 11:29:39 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=8655&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=8655&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:39 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/5388-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 14 Apr 2021 11:29:39 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=5388&lang=en
      Expires:
      - Thu, 15 Apr 2021 11:29:39 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=5388&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=5388&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:39 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=5388
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '277'
      Date:
      - Wed, 14 Apr 2021 11:29:39 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=5388&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=5388&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:39 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=9306
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:40 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:40 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/j/T-REC-J.163-200712-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:40 GMT
      Content-Type:
      - text/html
      Etag:
      - '"f084387b3ebfc81:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 26 May 2008 14:40:45 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<title>Summary - ITU-T Rec. J.163 (12/2007) Dynamic
        quality of service for the\r\nprovision of real-time services over cable television
        networks using cable\r\nmodems </title>\r\n<style>\r\n<!--\r\n \r\n-->\r\n</style>\r\n</head>\r\n\r\n<body>\r\n\r\n<div
        class=Section1>\r\n\r\n<table class=MsoNormalTable border=0 cellspacing=0
        cellpadding=0\r\n style='border-collapse:collapse;'>\r\n <tr>\r\n  <td width=\"100%\"
        valign=top style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a
        name=isume>Summary</a></h3>\r\n  <p class=MsoNormal>ITU-T\r\n  Recommendation
        J.163 addresses requirements for a client device to obtain\r\n  access to
        network resources. In particular, it specifies a comprehensive\r\n  mechanism
        for a client device to request a specific quality of service from\r\n  the
        DOCSIS network. Extensive examples illustrate the use of this\r\n  Recommendation.
        The scope of this Recommendation is to define the QoS architecture\r\n  for
        the &quot;Access&quot; portion of the IPCablecom network, provided to\r\n
        \ requesting applications on a per-flow basis. The access portion of the\r\n
        \ network is defined to be between the multimedia terminal adapter (MTA) and\r\n
        \ the cable modem termination system (CMTS), including the DOCSIS network.
        The\r\n  method of QoS allocation over the backbone is unspecified in this\r\n
        \ Recommendation. Interface to the managed IP backbone and issues related
        to IP\r\n  multicast are not within the scope of this Recommendation. This\r\n
        \ Recommendation also recognizes that per-flow reservations may be required\r\n
        \ within the customer premises, and the protocol developed addresses this\r\n
        \ potential need.</p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n<p
        class=MsoNormal align=left style='margin-top:0cm;text-align:left;'><br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br><br></p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:40 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=8655
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:41 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        DQoNCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4NCg0KPGh0bWwgaWQ9ImN0bDAwX0h0bWwxIiBsYW5nPSJlbiIgeG1sbnM6bz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6b2ZmaWNlIj4NCjxoZWFkIGlkPSJjdGwwMF9jdGwwMF9IZWFkMSI+DQogICAgPCEtLSBHbG9iYWwgc2l0ZSB0YWcgKGd0YWcuanMpIC0gR29vZ2xlIEFuYWx5dGljcyAtLT4NCiAgICA8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcz9pZD1VQS05ODQ1MTUyNi01Ij48L3NjcmlwdD4NCiAgICA8c2NyaXB0Pg0KICAgICAgICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsNCiAgICAgICAgZnVuY3Rpb24gZ3RhZygpIHsgZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTsgfQ0KICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOw0KDQogICAgICAgIGd0YWcoJ2NvbmZpZycsICdVQS05ODQ1MTUyNi01Jyk7DQogICAgPC9zY3JpcHQ+DQoNCiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPTgiIC8+PG1ldGEgbmFtZT0iR0VORVJBVE9SIiBjb250ZW50PSJNaWNyb3NvZnQgU2hhcmVQb2ludCIgLz48bWV0YSBuYW1lPSJwcm9naWQiIGNvbnRlbnQ9IlNoYXJlUG9pbnQuV2ViUGFydFBhZ2UuRG9jdW1lbnQiIC8+PG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIC8+PG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1MYW5ndWFnZSIgY29udGVudD0iZW4iIC8+PG1ldGEgaHR0cC1lcXVpdj0iRXhwaXJlcyIgY29udGVudD0iMCIgLz48dGl0bGU+DQoJSVRVLVQgUmVjb21tZW5kYXRpb24gZGF0YWJhc2UNCjwvdGl0bGU+DQoNCiAgICA8IS0tIElUVSB0ZW1wbGF0ZSBzdGFydHMgOiBsYW5ndWFnZSBJTmRlcGVuZGVudCAtLT4NCiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iaW1hZ2VzL2xvZ29zL2l0dS1mYXZpY29uLmljbyIgLz48bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIGhyZWY9ImltYWdlcy9sb2dvcy9hcHBsZS01Ny5wbmciIC8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iNzJ4NzIiIGhyZWY9ImltYWdlcy9sb2dvcy9hcHBsZS03Mi5wbmciIC8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTE0eDExNCIgaHJlZj0iaW1hZ2VzL2xvZ29zL2FwcGxlLTExNC5wbmciIC8+DQogICAgPCEtLSBGYWNlYm9vayBPcGVuIEdyYXBoIHRhZ3M6IGZpcnN0IDIgYXJlIHJlcXVpcmVkLCBjYW4gdXNlIGZiOmFkbWlucyBhbmQvb3IgZmI6YXBwX2lkIC0tPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IklUVSIgLz48bWV0YSBwcm9wZXJ0eT0ib2c6ZmI6YWRtaW5zIiAvPg0KICAgIDwhLS0gd2lsbCBuZWVkIHRvIGZpbGwgdGhpcyBvdXQgb3IgY2hhbmdlIGl0IHRvIGZiOmFwcF9pZCANCjxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iUEFHRSBUSVRMRSBHT0VTIEhFUkUiIC8+PG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJNRVRBIERFU0NSSVBUSU9OIEdPRVMgSEVSRSIgLz48bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJQQUdFIFVSTCBHT0VTIEhFUkUiIC8+PG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9ImNvbXBhbnkiIC8+PG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiAvPiAtLT4NCg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2l0dS1iYXNlLmNzcyIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJhbGwiIC8+PGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvaXR1LW1haW4uY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCIgLz48bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9pdHUtdC1yZWMuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCIgLz48bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNzcy9tcy1ydGVDdXN0b20tSVRVdjYuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCIgLz4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjYuNC9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeXVpLzEuOC4xNi9qcXVlcnktdWkubWluLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9pdHUtZnVuY3Rpb25zLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9pdHUtb3duLWZ1bmN0aW9ucy5qcyI+PC9zY3JpcHQ+DQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMvbWFpbm5hdi5qcyI+PC9zY3JpcHQ+DQogICAgPCEtLSBJVFUgdGVtcGxhdGUgZW5kcyAtLT4NCg0KICAgIA0KICAgIDxsaW5rIGhyZWY9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvV2ViUmVzb3VyY2UuYXhkP2Q9OVFDYWpERk9uNndobFBKSmk1RVlsbW5oaG1RVDIya0V6Z3hxcE9pMV9FWTk5aWtvb054LWpKU1gyb3gyOU5KeFhKeGJyeXBWOV9SNDU1VVNqZ2xibmsyQWpFdnphRnN4MkgwTUgwVzJCNG1FU05GY1gyV2VXMm1mNUJlNk5LakROaG5qSzNLMHpMV0xWcmw2MWJ1VlN3MiZhbXA7dD02MzczNzY1NzA5NzkxNzQ0NjIiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+PGxpbmsgaHJlZj0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9XZWJSZXNvdXJjZS5heGQ/ZD1nQV9PTEZUS1lkVW9MdVdib2hoZ0pJNU5GOVpNRjZMa0dibjkwWlZDaDA4NS1HUmd0U29seGxPOGV1cTIyZWJYbjNUNmZLT0UxcUtoV256UHdLWWl6SEFCN2dzTmVpMDRLMXhTc0pwTktLZ2pJUVhxU19oRXhwdXhrNWtpS1pVbnZ6Yi1HTWVSUWYtRk5vVjRmOERma1RsNldFdUp6STY4c01WZUtwVEt1anMxJmFtcDt0PTYzNzM3NjU3MDk3OTE3NDQ2MiIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz48L2hlYWQ+DQo8IS0tIElUVSB0ZW1wbGF0ZSBzdGFydHMgOiBsYW5ndWFnZSBkZXBlbmRlbnQgLS0+DQo8IS0tW2lmIGx0IElFIDddPiA8Ym9keSBjbGFzcz0iaWUgaWU2IGx0ZTkgbHRlOCBsdGU3IGluc2lkZSI+IDwhLS08IVtlbmRpZl0tLT4NCjwhLS1baWYgSUUgN10+IDxib2R5IGNsYXNzPSJpZSBpZTcgbHRlOSBsdGU4IGx0ZTcgaW5zaWRlIj4gPCEtLTwhW2VuZGlmXS0tPg0KPCEtLVtpZiBJRSA4XT4gPGJvZHkgY2xhc3M9ImllIGllOCBsdGU5IGx0ZTggaW5zaWRlIj4gPCEtLTwhW2VuZGlmXS0tPg0KPCEtLVtpZiBJRSA5XT4gPGJvZHkgY2xhc3M9ImllIGllOSBsdGU5IGluc2lkZSI+IDwhLS08IVtlbmRpZl0tLT4NCjwhLS1baWYgZ3QgSUUgOV0+IDxib2R5IGNsYXNzPSJpbnNpZGUiPiA8IS0tPCFbZW5kaWZdLS0+DQo8IS0tW2lmICFJRV0+PCEtLT4NCjxib2R5IGNsYXNzPSJpbnNpZGUiPg0KICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICA8IS0tIElUVSB0ZW1wbGF0ZSBlbmRzIC0tPg0KDQogICAgPGRpdiBjbGFzcz0id3JhcHBlciIgc3R5bGU9ImJhY2tncm91bmQ6ICNmZmYgdXJsKGltYWdlcy9iYWNrZ3JvdW5kL2JvZHktdG9wLWJnLTIxOXgxMC5wbmcpIHJlcGVhdC14IDAgMHB4OyI+DQoNCiAgICAgICAgPGEgbmFtZT0iVE9QIj48L2E+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMjEiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tICBNb2RpZmllZCB0byByZXNvbHZlIHRoZSBQcmludCBpc3N1ZSBvbiAwOCBqdW5lIDIwMTIgUmFqYW5pIFZFUEEtLTxoMSBjbGFzcz0ibG9nbyI+PGEgaHJlZj0iL2VuLyI+SVRVPC9hPjwvaDE+LS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZW4vIiB0aXRsZT0iSVRVIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJsb2dvIiBzcmM9ImltYWdlcy9sb2dvcy9pdHUtbG9nby5wbmciIGFsdD0iSVRVIiAvPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhZ2xpbmUgbGFuZy1zd2l0Y2hlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPkNvbW1pdHRlZCB0byBjb25uZWN0aW5nIHRoZSB3b3JsZDwvaDI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjbGVhcmZpeCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tLy50YWdsaW5lIC5sYW5nLXN3aXRjaGVyLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE1vdmVkIGZvciAxNTAgbG9nbyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTW92ZWQgYmFjayBhbmQgcmVtb3ZlZCAxNTAgbG9nbyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0vLmhlYWRlci1zZWFyY2gtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8uY29sLTIxLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMSIgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFN1c3RhaW5hYmxlIGRldmVsb3BtZW50IGxvZ286IEEuIFVHQUxFLCAyMyBTcGV0ZW1iZXIgMjAxOSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaGVpZ2h0PSIzMCIgc3R5bGU9InBhZGRpbmctdG9wOiA0MHB4OyBmbG9hdDogcmlnaHQ7IiBhbHQ9Ind0aXNkIiBzcmM9ImltYWdlcy9sb2dvcy9VTi1TREctTG9nby5wbmciIC8+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEVuZCwgU3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQgbG9nby0tPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8uY29sLTExLS0+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPCEtLS8uaGVhZGVyLS0+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMzIiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJtYWlubmF2LW1hc3RlciIgY2xhc3M9Im1haW4tbmF2Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY2xlYXJmaXgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaG9tZSBtbjAxIj48YSBocmVmPSIvZW4vUGFnZXMvZGVmYXVsdC5hc3B4Ij5JVFU8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1uMDIiPjxhIGhyZWY9Ii9lbi9nZW5lcmFsLXNlY3JldGFyaWF0L1BhZ2VzL2RlZmF1bHQuYXNweCI+R2VuZXJhbCBTZWNyZXRhcmlhdDwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibW4wMyByYWRpb2NvbW11bmljYXRpb24iPjxhIGhyZWY9Ii9lbi9JVFUtUi9QYWdlcy9kZWZhdWx0LmFzcHgiPlJhZGlvY29tbXVuaWNhdGlvbjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibW4wNCBhY3RpdmUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvZW4vSVRVLVQvUGFnZXMvZGVmYXVsdC5hc3B4Ij5TdGFuZGFyZGl6YXRpb248L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY2xlYXJmaXgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzdWItbmF2Ij48YSBocmVmPSJodHRwOi8vd3d3Lml0dS5pbnQvbmV0L0lUVS1UL2luZm8vRGVmYXVsdC5hc3B4Ij5BYm91dCBJVFUtVDwvYT4gPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic3ViLW5hdiI+PGEgaHJlZj0iaHR0cDovL3d3dy5pdHUuaW50L0lUVS1UL2V2ZW50cy8iPkV2ZW50czwvYT4gPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic3ViLW5hdiI+PGEgaHJlZj0iL2VuL0lUVS1UL2dyb3Vwcy9QYWdlcy9kZWZhdWx0LmFzcHgiPkFsbCBHcm91cHM8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InN1Yi1uYXYiPjxhIGhyZWY9Ii9lbi9JVFUtVC9wdWJsaWNhdGlvbnMvUGFnZXMvZGVmYXVsdC5hc3B4Ij5TdGFuZGFyZHM8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InN1Yi1uYXYiPjxhIGhyZWY9Ii9lbi9JVFUtVC9pbmZvL1BhZ2VzL3Jlc291cmNlcy5hc3B4Ij5SZXNvdXJjZXM8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InN1Yi1uYXYiPjxhIGhyZWY9Ii9lbi9JVFUtVC9nYXAvUGFnZXMvZGVmYXVsdC5hc3B4Ij5CU0c8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InN1Yi1uYXYiPjxhIGhyZWY9Imh0dHA6Ly93d3cuaXR1LmludC9lbi9JVFUtVC9zdHVkeWdyb3Vwcy9QYWdlcy9kZWZhdWx0LmFzcHgiPlN0dWR5IEdyb3VwczwvYT4gPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic3ViLW5hdiI+PGEgaHJlZj0iL2VuL0lUVS1EL1BhZ2VzL1JlZ2lvbmFsLVByZXNlbmNlLmFzcHgiPlJlZ2lvbmFsIFByZXNlbmNlPC9hPiA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzdWItbmF2Ij48YSBocmVmPSIvZW4vSVRVLVQvbWVtYmVyc2hpcC9QYWdlcy9kZWZhdWx0LmFzcHgiPkpvaW4gSVRVLVQ8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InN1Yi1uYXYtc2VhcmNoIGFjdGl2ZSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuaXR1LmludC9zZWFyY2giPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzdWItbmF2LXdvcmtzcGFjZSBhY3RpdmUiPjxhIGhyZWY9Imh0dHBzOi8vaXR1LmludC9teXdvcmtzcGFjZSI+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1uMDUiPjxhIGhyZWY9Ii9lbi9JVFUtRCI+RGV2ZWxvcG1lbnQ8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJtbjA2Ij48YSBocmVmPSIvZW4vaXR1dGVsZWNvbSI+SVRVIFRlbGVjb208L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJtbjA3Ij48YSBocmVmPSIvZW4vbWVtYmVyc2hpcCI+TWVtYmVycycgWm9uZTwvYT4gPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImpvaW4taXR1Ij48YSBocmVmPSIvZW4vam9pbiI+Sm9pbiBJVFU8L2E+IDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8ubWFpbi1uYXYtLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tLy5jb2wtMzItLT4NCiAgICAgICAgICAgICAgICA8IS0tLy5yb3ctLT4NCg0KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InBhZ2V0aXRsZSIgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0yNCBwYWdlLWhlYWRpbmciPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGgxPklUVS1UIFJlY29tbWVuZGF0aW9uczwvaDE+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tLy5jb2wtMjQgcGFnZS1oZWFkaW5nLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC04Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8uY29sLTggcGFnZS1oZWFkaW5nLS0+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPCEtLS8ucm93LS0+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJicmVhZGNydW1iIiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTMyIGJyZWFkY3J1bWIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTI0IGNvbC1maXJzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbT5Zb3UgYXJlIGhlcmU8L2VtPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0nY3RsMDBfU2l0ZU1hcFBhdGgxJz4mbmJzcDsmbmJzcDsmbmJzcDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Jy9lbi9QYWdlcy9kZWZhdWx0LmFzcHgnPkhvbWU8L2E+Jm5ic3A7Jmd0OyZuYnNwOzxhIHRpdGxlPSdJVFUtVCBSZWNvbW1lbmRhdGlvbnMnIGhyZWY9Jy9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvaW5kZXguYXNweCc+SVRVLVQgUmVjb21tZW5kYXRpb25zPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2xibF9jdXJyZW50X3BhZ2VfdGl0bGVfMSI+PHNwYW4+Jmd0Ozwvc3Bhbj4gSVRVLVQgSi4xNjMgKDExLzIwMDUpPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tLy5jb2wtMjQtLT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTggY29sLWxhc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlLXRoaXMgY2xlYXJmaXgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE1vZGlmaWVkIGJ5IFJhamFuaSBWZXBhIG9uIDEwIGp1bHkgMjAxMiAtLS0gIDxwPlNoYXJlIHRoZSBzdG9yeTwvcD4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlNoYXJlPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZGR0aGlzX3Rvb2xib3giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tX2ltYWdlcyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImFkZHRoaXNfYnV0dG9uX2ZhY2Vib29rIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy9idXR0b25zL2ZhY2Vib29rLXJvdW5kLnBuZyIgYWx0PSJTaGFyZSBvbiBGYWNlYm9vayIgLz48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImFkZHRoaXNfYnV0dG9uX3R3aXR0ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL2J1dHRvbnMvdHdpdHRlci1yb3VuZC5wbmciIGFsdD0iU2hhcmUgb24gdHdpdHRlciIgLz48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImFkZHRoaXNfYnV0dG9uX2xpbmtlZGluIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy9idXR0b25zL2xpbmtlZGluLXJvdW5kLnBuZyIgYWx0PSJTaGFyZSBvbiBMaW5rZWRJbiIgLz48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImFkZHRoaXNfYnV0dG9uX2VtYWlsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy9idXR0b25zL2VtYWlsLXJvdW5kLnBuZyIgYWx0PSJTaGFyZSB2aWEgZW1haWwiIC8+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tLy5jdXN0b21faW1hZ2VzLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tLy5hZGR0aGlzX3Rvb2xib3gtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tLy5zaGFyZS10aGlzLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0vLmNvbC04IHBhZ2UtaGVhZGluZy0tPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8uY29sLTMyIGJyZWFkY3J1bWItLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tLy5yb3ctLT4NCiAgICAgICAgICAgICAgICA8IS0tIElUVSB0ZW1wbGF0ZSBlbmRzIC0tPg0KICAgICAgICAgICAgICAgIDwhLS0gUHJpbnQgU2VjdGlvbiAvLyAtLT4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBuYW1lPSJhc3BuZXRGb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iLi9yZWMuYXNweD9yZWM9ODY1NSZhbXA7bGFuZz1lbiIgaWQ9ImFzcG5ldEZvcm0iPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfQ2xpZW50U3RhdGUiIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV9DbGllbnRTdGF0ZSIgdmFsdWU9InsmcXVvdDtBY3RpdmVUYWJJbmRleCZxdW90OzowLCZxdW90O1RhYkVuYWJsZWRTdGF0ZSZxdW90OzpbdHJ1ZSx0cnVlLHRydWUsdHJ1ZSx0cnVlXSwmcXVvdDtUYWJXYXNMb2FkZWRPbmNlU3RhdGUmcXVvdDs6W2ZhbHNlLGZhbHNlLGZhbHNlLGZhbHNlLGZhbHNlXX0iIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfX1ZJRVdTVEFURSIgaWQ9Il9fVklFV1NUQVRFIiB2YWx1ZT0iL3dFUER3VUpNVGd6TVRBNE56STVEMlFXQW1ZUFpCWUVBZ01QRHhZQ0hnUlVaWGgwQlNjOGMzQmhiajRtWjNRN1BDOXpjR0Z1UGlCSlZGVXRWQ0JLTGpFMk15QW9NVEV2TWpBd05TbGtaQUlGRDJRV0FnSUREMlFXQWdJQkQyUVdBZ0lCRHc5a0ZnSWVCMjl1Wm05amRYTUZEblJvYVhNdWMyVnNaV04wS0NrN1pCZ0NCUjVmWDBOdmJuUnliMnh6VW1WeGRXbHlaVkJ2YzNSQ1lXTnJTMlY1WDE4V0FRVWdZM1JzTURBa1kyOXVkR1Z1ZEY5dFlXbHVKRlJoWWtOdmJuUmhhVzVsY2pFRklHTjBiREF3SkdOdmJuUmxiblJmYldGcGJpUlVZV0pEYjI1MFlXbHVaWEl4RHc5a1ptUjhkMXBJTzA1VG1HYmhPbkZnc0RVZVFIQis3WHNKNUUza3NXWkdYTFU3QUE9PSIgLz4NCg0KDQo8c2NyaXB0IHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9XZWJSZXNvdXJjZS5heGQ/ZD12cGZCdmRMZWowbDZlSld1M1Z0MkRRN0RnNFZWZGlsbGQ4TWxnQXpoeFNnQjhULXo1SmoxUGpqQVdzdzctQmFzX01BTVVHQW9DekotbGZqa1gwN1FOTXYxRjhZbW5rU1pHRXdGSWM4M0FSQTEmYW1wO3Q9NjM3NDU0MTA1NjQwMDAwMDAwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvU2NyaXB0UmVzb3VyY2UuYXhkP2Q9MnpEWnhocEpwZ1loRU1zTU1YckJfdjhHLV9pNHVxYXdYM0NWTEhPa1hRX3FBT1laUkhjT2NtRV9xYkRwZFRYNVNJMzY1a3dZbElNVWpDQXFQVnczaGlTR1pnQ0pId01ES1lmOFVlTGxXTWNtTjltVjVXQmtsdnlwdnd5VUJuWk5uUm55c25QUmFGRlhUREIzdGpwQmw4ZjdMYjc5aG9WWk9JRWJYbi1laHNUUEVMQVhqY09uN3libllFeWxCUmJmMCZhbXA7dD0yZmU2NzRlYiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCi8vPCFbQ0RBVEFbDQppZiAodHlwZW9mKFN5cykgPT09ICd1bmRlZmluZWQnKSB0aHJvdyBuZXcgRXJyb3IoJ0FTUC5ORVQgQWpheCBjbGllbnQtc2lkZSBmcmFtZXdvcmsgZmFpbGVkIHRvIGxvYWQuJyk7DQovL11dPg0KPC9zY3JpcHQ+DQoNCjxzY3JpcHQgc3JjPSIvSVRVLVQvcmVjb21tZW5kYXRpb25zL1NjcmlwdFJlc291cmNlLmF4ZD9kPUlVbXIzTkVFWUl4YlJwRk1IR3JSY050eXFkMHZKYlpwY1ItOE9wYjRpOEowX19lSUhpTF9mdHp1c25qU05adU5YYVFzMHpVbi1wLTdEMERpYlgtSldjMVhHT0tuQ0dySHA1MkVhTTF5YmJfRTh6OW9Yc0VEV1FHblBQNW5Xd1IxSnZ5WE1LLTRoS1ZsbWZScDJndnBkQTImYW1wO3Q9N2Q1OTg2YSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvSVRVLVQvcmVjb21tZW5kYXRpb25zL1NjcmlwdFJlc291cmNlLmF4ZD9kPVhLUVgyVzZGYmI2dlZrMnQxUllxTmk4RDNTaUpoODBkRmdaTS1hT29ISlJQX2trRHpPQU9TbkhRRmFLZklXdHlGLWhhN1BJVTFmeVBHd3pDM09xUDZPeTBROTVBRFhBQmdpUEswcFY3Q01YT0x2U01PUndpY1dMQnZPSmpfQlRGMCZhbXA7dD03ZDU5ODZhIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvU2NyaXB0UmVzb3VyY2UuYXhkP2Q9WE5GRGdubS1HZ0dZYXRJNFp4eUxWVk14d0REbHRwTHdGM29wbG9Tci1qSHJoYlFsZk56Ykc1MXVYUi13dWY2b2tiN2UyWjZXMHRtWF9wdnFRSDZZbzBLcVlJcF9nMFh5MGdQcjY0TUNpajdlVklXMkNodzh4ZXhCTllkcFdDYXNQOV9UVExWV0ZoZ1JrcHJ2U2ZnZ0hnMiZhbXA7dD03ZDU5ODZhIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvU2NyaXB0UmVzb3VyY2UuYXhkP2Q9eXZRTi1iSzhNZlBXaXZSaFBGLXM0V0Zmc1EydlptdXI3c2tscFFQRXN2ZXVjUkRHRV9DcG9DYkVRVVkySHVtM1hKRTR4T29jNWxTQWluaVlSR3ZYUl9hNXpqck1TSnhBNjlrcXJJYTdoQUkwNk5PdU9LRGxvUjhoZXM0SGM1SDJGeV96TWdxcENEQkZ0bktjaHNuODd3MiZhbXA7dD03ZDU5ODZhIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvU2NyaXB0UmVzb3VyY2UuYXhkP2Q9MzZXelpTckxLYmdOT0JtQmRkRjFxTDBRLXJFMDk4WDJIQUh6cV9iOUdudHd1Y3lubFRPWDgyWmVtY0Q3bWZCWURwbnI2ZXp2cmotc2NjOEhqRk1uWmlYbEsycVQ2N2hQX20yb201T2kyU21NblR5RXFVLWN2WHhHRmlMRDRNZmwwJmFtcDt0PTdkNTk4NmEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9TY3JpcHRSZXNvdXJjZS5heGQ/ZD1pX2JzWFVJam1FcGlxdWptV3dfcnI2ZEs5VnFwVnBxeFJPOXQ1Y2U3b3AtYlFUTzgtQS1ORkpSeUlweVppWXdvNE1IRDgzR0g4R2xJWS15Q0x5bEo5eUo5ZklrcnVaYTBUV0g3dWJ1ZG9iekV6SVJEcXFXeGZmOHFJRC04WlJnd3pvczNuNm9xOUpLM29saWpPOUNrRkEyJmFtcDt0PTdkNTk4NmEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9TY3JpcHRSZXNvdXJjZS5heGQ/ZD04REF1MmJmeGktRUtzWFVyVHlwM3kxX3RidnhMdDQtNDlNQ3djVjlkSGRHMjlrRTBqYzRud05pLUt2dVFESk9VQXJlTWhDbnRBcjFGRXpiY29zYXNsTkd5b2F1RVdNbnhEekt2ak5Hb2RGeHBmQ1Z0UnBwUk9rNjRWOVExNVB1LXo0SXRwSnd4dGpIeVpsNjJHQWN6OVEyJmFtcDt0PTdkNTk4NmEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9TY3JpcHRSZXNvdXJjZS5heGQ/ZD11aEJBbGMzc2VMb2lFMWZYRDJNOURwRmVNdm1WX0JXMkc3VmxjTzBQdnhfVzNTcFBzeW0wbnBGNGc2ZmtHeWZ6eEdudHR0NHhIMVZZZWNBRUhzNGs3dVBEV1BnUDdBeEsxOHRXclZNak8yNFd5dnZpMTJIbUVjaDZ4Um1sbWFyU1ZQVGFkU0R3TV81Y0U4Y2FpMVVUUFEyJmFtcDt0PTdkNTk4NmEiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9TY3JpcHRSZXNvdXJjZS5heGQ/ZD1kckF1Y2VCYTFxOUJFWTdteUpNRjVmenQ1OF9lRldCeTNjMHl2WFVYSTJPWXpXYzR6RnBIMHQxQUNvRVRZaHU3VHpFYmhDVHdvejVpRDRCbVZNeHB1aHAzOVpwTkFWZnZIdmJqYzNpMzZ5WnVPMU5qNXJ1a2txMFFJa2VuMEVBbDAmYW1wO3Q9N2Q1OTg2YSIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvSVRVLVQvcmVjb21tZW5kYXRpb25zL1NjcmlwdFJlc291cmNlLmF4ZD9kPWF5YUlsVmV3UWVoZjJpU3gxemJ0bUQ3UkJYNUlNNVBLX0F5NUdOc1c5NGk1TzA2ODN3N0t3cF9JbVpMdlRNZV9oQVA1d0h5eEJTNERPV0NHbTJ4N1VNT0ZkalB1clNPQWxiVGVYeTBPV0RVaURua0F2VTc1Q19saUxIZnczakRXMCZhbXA7dD03ZDU5ODZhIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvU2NyaXB0UmVzb3VyY2UuYXhkP2Q9QkhSQVhDRnA0X1JaNWNzYVF2QndqMm9Tc3Y3VVV5bjAyMWR5VlRzclpTNWJpZGx2dXFJYklFQm9rZGNQamxLWF9JNm5oZWJ1LWxaVHpfNmtCYVZ4UjlYSnpubnNtakRqdGQ2N0g1cFlMTS1heGxFbUxQZTNEMGt1ZG9SNUFGOXNvS0tBZXJlZUtSQTFTZlB2TTM3YjRnMiZhbXA7dD03ZDU5ODZhIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19WSUVXU1RBVEVHRU5FUkFUT1IiIGlkPSJfX1ZJRVdTVEFURUdFTkVSQVRPUiIgdmFsdWU9IjdBNTIxNTY4IiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19FVkVOVFZBTElEQVRJT04iIGlkPSJfX0VWRU5UVkFMSURBVElPTiIgdmFsdWU9Ii93RWRBQ0ZyVlEwZG96SHdTMUYzcmtIc0grZjN6VS90YytSUWs1Zm5xc0o2cGJ5dDJQcWIyNHZJZEMyNHJIQlMxSGpwTWZJTk0ydTQxaUQ0NFdmUVJ0TE1KKyt2VGxtWkxzekpPeERSOEM3ZnhVRVZMeUZ5blN6V1MyamlXV1hpdGZ1TTRQWXk0SDdvN1NUMkV3RDhndkwvOVd4QUtxeXBOZ1E5YXVVQjlScGMwZ3VLemJiNGJIUTNVeUlRU2UwazdnU2ZYTzcwRGFHZHB0eUdZV1ZXM05zK3N4R2wwbFIrd3FUS3RZQXhsTWF5VXdxRTZUNWNrU2lSUWRkRVhYQWF6RTI4ZnJHZmdaZEIydERSUGY2NHg4MG5RVGc5bWkyRStJWkczT21jbjB6aDVQQ25NdkhaUnViaFgyekhKV285RmFpSkFpWjFSYjMvOE1lUmsvYzRYeHBNeldGQ1pJRzljVzc5bEVlWlhZMTZnZTVYQjV5YWhPeUFiRlU2MThyT2VoaXVNSlFGL2dObWp5NWdsWThkMVVzU2hSTVdzWkdzVnc1akJnMGNEYXJZOG9nakdzektDWUVwLzV0REdyd3BpeEcrdy93cGJwTGJRbk9QOHQyc2N4dFFvM1hMLytQYk11cytHMUE4RFNidysyVEt2dkdpOHNqTC84dVluN2F5Z2grUzNUQnRJYkk1N1FoVFRDQXVsZ3pId0RDNnd5d1JRT0lGcC9TQXA5NTJONnI3WlJ1SHpZcHVQTVFPNmZWejI2Z0hkcUc2MGVHbEcrM2NydU1wQ2hNVUJTZ2dKQlU2UGplajAxdFRZRkl3YzBZWWdHaktKQ1Z1MVFlZmNzUlZjTk42K25LNkU2YXNJYlMxSEMzaCthVFpRUG95NC8xamZwbzV2NTBLUHVhOEhIK1BidDBMd215KytkRlI0NkhjWjlmQ01IL1ZmU0dSbXNFbzdkS0M0SDM3M3JZZE1tY3IwcFBlTWZMN3FoUTFvSHVGNGc9PSIgLz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm0gPSBTeXMuV2ViRm9ybXMuUGFnZVJlcXVlc3RNYW5hZ2VyLmdldEluc3RhbmNlKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm0uYWRkX2luaXRpYWxpemVSZXF1ZXN0KEluaXRpYWxpemVSZXF1ZXN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm0uYWRkX2VuZFJlcXVlc3QoRW5kUmVxdWVzdCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBJbml0aWFsaXplUmVxdWVzdChzZW5kZXIsIGFyZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnd2FpdCc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gRW5kUmVxdWVzdChzZW5kZXIsIGFyZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnYXV0byc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBSZWNvbW1lbmRhdGlvbiBuYXZpZ2F0aW9uIG1lbnUgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCByb3dzcGFuPSIyIiBzdHlsZT0id2lkdGg6IDEwMHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIA0KDQo8dGFibGU+DQogICAgPHRyPg0KICAgICAgICA8dGQgc3R5bGU9ImNvbG9yOiBHcmF5OyI+DQogICAgICAgICAgICBTZWFyY2ggYnkgbnVtYmVyOg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGQ+DQogICAgICAgICAgICA8aW5wdXQgbmFtZT0iY3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJHR4dF9yZWMiIHR5cGU9InRleHQiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfdHh0X3JlYyIgdGl0bGU9IlNlYXJjaCBmb3IgSVRVLVQgUmVjb21tZW5kYXRpb25zIGFuZCBTdXBwbGVtZW50cyIgb25mb2N1cz0idGhpcy5zZWxlY3QoKTsiIC8+DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPCEtLSBGb3JtIHdpdGggb25seSBvbmUgdGV4dGJveCBjYW5ub3QgYmUgdmFsaWRhdGVkIHdpdGggYSBzaW1wbGUgRW50ZXIga2V5cGVzcyBvbiBJRSA6KSkpIC0tPg0KICAgICAgICAgICAgPCEtLSBUbyBhdm9pZCBzdWNoIGFuIGlzc3VlLCBvbmx5IG9uZSBzb2x1dGlvbiwgZ2l2ZSBpdCBhIHNlY29uZCB0ZXh0Ym94IS4uLiBidXQgaGlkZGVuLi4uIC0tPg0KICAgICAgICAgICAgPGlucHV0IG5hbWU9ImN0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSRoaWRkZW5fdGV4dGJveCIgdHlwZT0idGV4dCIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9oaWRkZW5fdGV4dGJveCIgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbjsgZGlzcGxheTogbm9uZSIgLz4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgIDwvdGQ+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+DQogICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJjdGwwMCRjb250ZW50X21lbnUkdWNfcmVjX3NlYXJjaDEkYnRuX3NlYXJjaCIgdmFsdWU9IlNlYXJjaCIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9idG5fc2VhcmNoIiAvPg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGQ+DQogICAgICAgICAgICANCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgICAgPHRkIHN0eWxlPSJjb2xvcjogR3JheTsiPg0KICAgICAgICAgICAgT3RoZXJzOg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgICA8dGQ+DQogICAgICAgICAgICA8YSBocmVmPSIjY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudV9Ta2lwTGluayI+PGltZyBhbHQ9IlNraXAgTmF2aWdhdGlvbiBMaW5rcyIgc3JjPSIvSVRVLVQvcmVjb21tZW5kYXRpb25zL1dlYlJlc291cmNlLmF4ZD9kPURnT0xXRmdBQ0QtYXBUQnMtX3JoTl9aS0hMUFJqUXpYUng1cm9Fd185Wm1XblQ1anVWX3RwUk1sZ2ozZGFtWlo3aXJ0LTRJQUMybi1qV0E0NzF2RmI5ZzA2RDVEWHc2LXQ3NEdjTVpSbWNFMSZhbXA7dD02Mzc0NTQxMDU2NDAwMDAwMDAiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGJvcmRlcj0iMCIgLz48L2E+PHRhYmxlIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51IiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJvcmRlcj0iMCI+DQoJPHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyU3RhdGljKHRoaXMpIiBvbm1vdXNlb3V0PSJNZW51X1VuaG92ZXIodGhpcykiIG9ua2V5dXA9Ik1lbnVfS2V5KGV2ZW50KSIgdGl0bGU9IktleXdvcmRzIHNlYXJjaCIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9tYWluX21lbnVuMCI+DQoJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCTx0cj4NCgkJCQk8dGQgbm93cmFwPSJub3dyYXAiIHdpZHRoPSIxMDAlIj48YSBocmVmPSJqYXZhc2NyaXB0Ol9fZG9Qb3N0QmFjaygmIzM5O2N0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSRtYWluX21lbnUmIzM5OywmIzM5O2h0dHBzOi8vd3d3Lml0dS5pbnQvc2VhcmNoJiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+Q29udGVudCBzZWFyY2g8L2ZvbnQ+PC9hPjwvdGQ+DQoJCQk8L3RyPg0KCQk8L3RhYmxlPjwvdGQ+DQoJPC90cj48dHIgb25tb3VzZW92ZXI9Ik1lbnVfSG92ZXJTdGF0aWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiB0aXRsZT0iQWR2YW5jZWQgc2VhcmNoIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW4xIj4NCgkJPHRkPjx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiPg0KCQkJPHRyPg0KCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7c2VhcmNoLmFzcHgmIzM5OykiPjxmb250IGNvbG9yPSIjMjg0RTk4Ij5BZHZhbmNlZCBzZWFyY2g8L2ZvbnQ+PC9hPjwvdGQ+DQoJCQk8L3RyPg0KCQk8L3RhYmxlPjwvdGQ+DQoJPC90cj48dHIgb25tb3VzZW92ZXI9Ik1lbnVfSG92ZXJTdGF0aWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiB0aXRsZT0iU2VhcmNoIGJ5IHByb3Zpc2lvbmFsIG5hbWUiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjIiPg0KCQk8dGQ+PHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSI+DQoJCQk8dHI+DQoJCQkJPHRkIG5vd3JhcD0ibm93cmFwIiB3aWR0aD0iMTAwJSI+PGEgaHJlZj0iamF2YXNjcmlwdDpfX2RvUG9zdEJhY2soJiMzOTtjdGwwMCRjb250ZW50X21lbnUkdWNfcmVjX3NlYXJjaDEkbWFpbl9tZW51JiMzOTssJiMzOTtwcm92bmFtZS5hc3B4JiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+UHJvdmlzaW9uYWwgbmFtZTwvZm9udD48L2E+PC90ZD4NCgkJCTwvdHI+DQoJCTwvdGFibGU+PC90ZD4NCgk8L3RyPjx0ciBvbm1vdXNlb3Zlcj0iTWVudV9Ib3ZlclN0YXRpYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIHRpdGxlPSJTZWFjaCBieSBlcXVpdmFsZW50IG9yIGlkZW50aWNhbCBJU08vSUVDIG51bWJlciIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9tYWluX21lbnVuMyI+DQoJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCTx0cj4NCgkJCQk8dGQgbm93cmFwPSJub3dyYXAiIHdpZHRoPSIxMDAlIj48YSBocmVmPSJqYXZhc2NyaXB0Ol9fZG9Qb3N0QmFjaygmIzM5O2N0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSRtYWluX21lbnUmIzM5OywmIzM5O2lzby5hc3B4JiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+SVNPL0lFQyBudW1iZXI8L2ZvbnQ+PC9hPjwvdGQ+DQoJCQk8L3RyPg0KCQk8L3RhYmxlPjwvdGQ+DQoJPC90cj48dHIgb25tb3VzZW92ZXI9Ik1lbnVfSG92ZXJTdGF0aWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiB0aXRsZT0iU2VhY2ggYnkgZm9ybWFsIGRlc2NyaXB0aW9ucyIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9tYWluX21lbnVuNCI+DQoJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCTx0cj4NCgkJCQk8dGQgbm93cmFwPSJub3dyYXAiIHdpZHRoPSIxMDAlIj48YSBocmVmPSJqYXZhc2NyaXB0Ol9fZG9Qb3N0QmFjaygmIzM5O2N0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSRtYWluX21lbnUmIzM5OywmIzM5O2ZsLmFzcHgmIzM5OykiPjxmb250IGNvbG9yPSIjMjg0RTk4Ij5Gb3JtYWwgZGVzY3JpcHRpb248L2ZvbnQ+PC9hPjwvdGQ+DQoJCQk8L3RyPg0KCQk8L3RhYmxlPjwvdGQ+DQoJPC90cj48dHIgb25tb3VzZW92ZXI9Ik1lbnVfSG92ZXJTdGF0aWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW41Ij4NCgkJPHRkPjx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiPg0KCQkJPHRyPg0KCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9IiMiPjxmb250IGNvbG9yPSIjMjg0RTk4Ij5TdHVkeSBHcm91cHMgdHJlZSB2aWV3PC9mb250PjwvYT48L3RkPjx0ZCB3aWR0aD0iMCI+PGltZyBzcmM9Ii9JVFUtVC9yZWNvbW1lbmRhdGlvbnMvV2ViUmVzb3VyY2UuYXhkP2Q9bzk4RUFYZmc3M0ZyT0IxSUVDcnYzemVMYVFlWG93UzlzeXotUTVvaGVCZnVhdVlDVXdSeFV0bHVOd3Ridmpfa2x5a1dDQUpnMkJ5b1hsTVBXNlVVcWJRY21GVzg5Mm5ZczVwQVRzVTdiQmcxJmFtcDt0PTYzNzQ1NDEwNTY0MDAwMDAwMCIgYWx0PSJFeHBhbmQgU3R1ZHkgR3JvdXBzIHRyZWUgdmlldyIgdmFsaWduPSJtaWRkbGUiIC8+PC90ZD4NCgkJCTwvdHI+DQoJCTwvdGFibGU+PC90ZD4NCgk8L3RyPg0KPC90YWJsZT48ZGl2IGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjVJdGVtcyIgY2xhc3M9IkR5bmFtaWNNZW51WkluZGV4IiBzdHlsZT0iZGlzcGxheTpub25lOyI+DQoJPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCgkJPHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjYiPg0KCQkJPHRkPjx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiPg0KCQkJCTx0cj4NCgkJCQkJPHRkIG5vd3JhcD0ibm93cmFwIiB3aWR0aD0iMTAwJSI+PGEgaHJlZj0iamF2YXNjcmlwdDpfX2RvUG9zdEJhY2soJiMzOTtjdGwwMCRjb250ZW50X21lbnUkdWNfcmVjX3NlYXJjaDEkbWFpbl9tZW51JiMzOTssJiMzOTtTdHVkeSBHcm91cHMgdHJlZSB2aWV3XFxpbmRleF9zZ19hbGwuYXNweD9zZz0wJiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+QWxsIFNHczwvZm9udD48L2E+PC90ZD4NCgkJCQk8L3RyPg0KCQkJPC90YWJsZT48L3RkPg0KCQk8L3RyPjx0ciBvbm1vdXNlb3Zlcj0iTWVudV9Ib3ZlckR5bmFtaWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW43Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0wJiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+VFNBRzwvZm9udD48L2E+PC90ZD4NCgkJCQk8L3RyPg0KCQkJPC90YWJsZT48L3RkPg0KCQk8L3RyPjx0ciBvbm1vdXNlb3Zlcj0iTWVudV9Ib3ZlckR5bmFtaWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW44Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0yJiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+U3R1ZHkgR3JvdXAgMjwvZm9udD48L2E+PC90ZD4NCgkJCQk8L3RyPg0KCQkJPC90YWJsZT48L3RkPg0KCQk8L3RyPjx0ciBvbm1vdXNlb3Zlcj0iTWVudV9Ib3ZlckR5bmFtaWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW45Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0zJiMzOTspIj48Zm9udCBjb2xvcj0iIzI4NEU5OCI+U3R1ZHkgR3JvdXAgMzwvZm9udD48L2E+PC90ZD4NCgkJCQk8L3RyPg0KCQkJPC90YWJsZT48L3RkPg0KCQk8L3RyPjx0ciBvbm1vdXNlb3Zlcj0iTWVudV9Ib3ZlckR5bmFtaWModGhpcykiIG9ubW91c2VvdXQ9Ik1lbnVfVW5ob3Zlcih0aGlzKSIgb25rZXl1cD0iTWVudV9LZXkoZXZlbnQpIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudW4xMCI+DQoJCQk8dGQ+PHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgYm9yZGVyPSIwIiB3aWR0aD0iMTAwJSI+DQoJCQkJPHRyPg0KCQkJCQk8dGQgbm93cmFwPSJub3dyYXAiIHdpZHRoPSIxMDAlIj48YSBocmVmPSJqYXZhc2NyaXB0Ol9fZG9Qb3N0QmFjaygmIzM5O2N0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSRtYWluX21lbnUmIzM5OywmIzM5O1N0dWR5IEdyb3VwcyB0cmVlIHZpZXdcXGluZGV4X3NnLmFzcHg/c2c9NSYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDU8L2ZvbnQ+PC9hPjwvdGQ+DQoJCQkJPC90cj4NCgkJCTwvdGFibGU+PC90ZD4NCgkJPC90cj48dHIgb25tb3VzZW92ZXI9Ik1lbnVfSG92ZXJEeW5hbWljKHRoaXMpIiBvbm1vdXNlb3V0PSJNZW51X1VuaG92ZXIodGhpcykiIG9ua2V5dXA9Ik1lbnVfS2V5KGV2ZW50KSIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV9tYWluX21lbnVuMTEiPg0KCQkJPHRkPjx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGJvcmRlcj0iMCIgd2lkdGg9IjEwMCUiPg0KCQkJCTx0cj4NCgkJCQkJPHRkIG5vd3JhcD0ibm93cmFwIiB3aWR0aD0iMTAwJSI+PGEgaHJlZj0iamF2YXNjcmlwdDpfX2RvUG9zdEJhY2soJiMzOTtjdGwwMCRjb250ZW50X21lbnUkdWNfcmVjX3NlYXJjaDEkbWFpbl9tZW51JiMzOTssJiMzOTtTdHVkeSBHcm91cHMgdHJlZSB2aWV3XFxpbmRleF9zZy5hc3B4P3NnPTkmIzM5OykiPjxmb250IGNvbG9yPSIjMjg0RTk4Ij5TdHVkeSBHcm91cCA5PC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjEyIj4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xMSYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDExPC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjEzIj4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xMiYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDEyPC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjE0Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xMyYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDEzPC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjE1Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xNSYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDE1PC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjE2Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xNiYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDE2PC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjE3Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0xNyYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDE3PC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+PHRyIG9ubW91c2VvdmVyPSJNZW51X0hvdmVyRHluYW1pYyh0aGlzKSIgb25tb3VzZW91dD0iTWVudV9VbmhvdmVyKHRoaXMpIiBvbmtleXVwPSJNZW51X0tleShldmVudCkiIGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjE4Ij4NCgkJCTx0ZD48dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBib3JkZXI9IjAiIHdpZHRoPSIxMDAlIj4NCgkJCQk8dHI+DQoJCQkJCTx0ZCBub3dyYXA9Im5vd3JhcCIgd2lkdGg9IjEwMCUiPjxhIGhyZWY9ImphdmFzY3JpcHQ6X19kb1Bvc3RCYWNrKCYjMzk7Y3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJG1haW5fbWVudSYjMzk7LCYjMzk7U3R1ZHkgR3JvdXBzIHRyZWUgdmlld1xcaW5kZXhfc2cuYXNweD9zZz0yMCYjMzk7KSI+PGZvbnQgY29sb3I9IiMyODRFOTgiPlN0dWR5IEdyb3VwIDIwPC9mb250PjwvYT48L3RkPg0KCQkJCTwvdHI+DQoJCQk8L3RhYmxlPjwvdGQ+DQoJCTwvdHI+DQoJPC90YWJsZT48ZGl2IGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjVJdGVtc1VwIiBvbm1vdXNlb3Zlcj0iUG9wT3V0X1VwKHRoaXMpIiBvbm1vdXNlb3V0PSJQb3BPdXRfU3RvcCh0aGlzKSIgYWxpZ249ImNlbnRlciIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPg0KCQk8aW1nIHNyYz0iL0lUVS1UL3JlY29tbWVuZGF0aW9ucy9XZWJSZXNvdXJjZS5heGQ/ZD12YjNtckxVX1dZWHdzaHBMajdJQnpFODhvR1ZacWVEb2RqRy1xQktTNXJ1UzkwU3FPa2tWQ1BnM0dFYW41WGpaWmo2eGpCYm95NkNTNVhSdVBNSUoxMExIZ0N6MkxyNWdheUNXaVgtTUpRbzEmYW1wO3Q9NjM3NDU0MTA1NjQwMDAwMDAwIiBhbHQ9IlNjcm9sbCB1cCIgLz4NCgk8L2Rpdj48ZGl2IGlkPSJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51bjVJdGVtc0RuIiBvbm1vdXNlb3Zlcj0iUG9wT3V0X0Rvd24odGhpcykiIG9ubW91c2VvdXQ9IlBvcE91dF9TdG9wKHRoaXMpIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZGlzcGxheTpub25lOyI+DQoJCTxpbWcgc3JjPSIvSVRVLVQvcmVjb21tZW5kYXRpb25zL1dlYlJlc291cmNlLmF4ZD9kPWU4Vi1xSmkwMVBjOF9tb3NKUWJZcjFQdy0xd002ekVEYXAtY1pseVVoWTFnSVpFNVBpUmg3VWFoSHJ5UmNLcUhhY0E4b3BkblI1YnR2UDJtVEZCeFdCUFhxY2hCUVNDdlU3SkRBbE1EQ3M0MSZhbXA7dD02Mzc0NTQxMDU2NDAwMDAwMDAiIGFsdD0iU2Nyb2xsIGRvd24iIC8+DQoJPC9kaXY+DQo8L2Rpdj48YSBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX21haW5fbWVudV9Ta2lwTGluayI+PC9hPg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI+DQo8L3RhYmxlPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkY29udGVudF9tZW51JHVjX3JlY19zZWFyY2gxJHR4dF9pZHJlYyIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV90eHRfaWRyZWMiIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdGwwMCRjb250ZW50X21lbnUkdWNfcmVjX3NlYXJjaDEkSGlkZGVuRmllbGQxIiBpZD0iY3RsMDBfY29udGVudF9tZW51X3VjX3JlY19zZWFyY2gxX0hpZGRlbkZpZWxkMSIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN0bDAwJGNvbnRlbnRfbWVudSR1Y19yZWNfc2VhcmNoMSR0eHRfbGFuZyIgaWQ9ImN0bDAwX2NvbnRlbnRfbWVudV91Y19yZWNfc2VhcmNoMV90eHRfbGFuZyIgdmFsdWU9ImVuIiAvPg0KDQoNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0b3A7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIDxkaXYgaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9VcGRhdGVQYW5lbDIiPg0KCQ0KICAgICAgICAgICAgPGEgaWQ9ImRldGFpbHMiPjwvYT4NCiAgICAgICAgICAgIDx0YWJsZSBpZD0iY3RsMDBfY29udGVudF9tYWluX3RhYmxlX2RldGFpbHMiIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7Ij4NCgkJPHRyPg0KCQkJPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX2Rpdl9yZWNfbWFpbl9pbmZvIj4NCiAgICANCiAgICAgICAgICAgIDx0YWJsZT4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBzdHlsZT0iYm9yZGVyOiBzb2xpZCAxcHggIzAwMzM2NjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwNEI5NjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmc6IDVweDsiIGNsYXNzPSJ3aGl0ZS10ZXh0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj48c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3JwdF9tYWluX2N0bDAwX2xibF9yZWMiPjxmb250IGNvbG9yPSJXaGl0ZSI+SVRVLVQgSi4xNjMgKDExLzIwMDUpPC9mb250Pjwvc3Bhbj48L2gyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmc6IDVweDsgdGV4dC1hbGlnbjogcmlnaHQ7IiBjbGFzcz0id2hpdGUtdGV4dCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPScuL3JlYy5hc3B4P3JlYz04NjU1Jmxhbmc9YXInIHRpdGxlPSIiIHN0eWxlPSJmb250LWZhbWlseTogJ1RyYWRpdGlvbmFsIEFyYWJpYyc7Zm9udC1zaXplOiAxM3B0OyBjb2xvcjogd2hpdGU7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsiPti52LHYqNmKPC9hPiB8IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0nLi9yZWMuYXNweD9yZWM9ODY1NSZsYW5nPXpoJyB0aXRsZT0iIiBzdHlsZT0iZm9udC1mYW1pbHk6IFNpbVN1bjsgY29sb3I6IHdoaXRlOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7Ij7kuK3mloc8L2E+IHwgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPScuL3JlYy5hc3B4P3JlYz04NjU1Jmxhbmc9ZW4nIHRpdGxlPSIiIHN0eWxlPSJjb2xvcjogd2hpdGU7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsiPkVuZ2xpc2g8L2E+IHwgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPScuL3JlYy5hc3B4P3JlYz04NjU1Jmxhbmc9ZXMnIHRpdGxlPSIiIHN0eWxlPSJjb2xvcjogd2hpdGU7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsiPkVzcGHDsW9sPC9hPiB8IA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0nLi9yZWMuYXNweD9yZWM9ODY1NSZsYW5nPWZyJyB0aXRsZT0iIiBzdHlsZT0iY29sb3I6IHdoaXRlOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7Ij5GcmFuw6dhaXM8L2E+IHwgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPScuL3JlYy5hc3B4P3JlYz04NjU1Jmxhbmc9cnUnIHRpdGxlPSIiIHN0eWxlPSJjb2xvcjogd2hpdGU7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsiPtCg0YPRgdGB0LrQuNC5PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHN0eWxlPSJib3JkZXI6IHNvbGlkIDFweCAjMDAzMzY2OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgIGNsYXNzPSJ0aXRsZSIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxNXB4OyB3aXRkaDogOTAlIj5EeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtczwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6IDEwJSI+PGEgaHJlZj0iaHR0cDovL2hhbmRsZS5pdHUuaW50LzExLjEwMDIvMTAwMC84NjU1LWVuP2xvY2F0dD1mb3JtYXQ6cGRmJmF1dGggInRpdGxlPSJQZXJzaXN0ZW50IGxpbmsgdG8gZG93bmxvYWQgdGhlIFBERiBmaWxlIj48aW1nIHNyYz0iaW1hZ2VzL3BkZi5wbmciIC8+PC9hPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSIyIj48ZGl2IGNsYXNzPSJzdW1tYXJ5Ij5UaGlzIFJlY29tbWVuZGF0aW9uIGFkZHJlc3NlcyByZXF1aXJlbWVudHMgZm9yIGEgY2xpZW50IGRldmljZSB0byBvYnRhaW4gYWNjZXNzIHRvIG5ldHdvcmsgcmVzb3VyY2VzLiBJbiBwYXJ0aWN1bGFyLCBpdCBzcGVjaWZpZXMgYSBjb21wcmVoZW5zaXZlIG1lY2hhbmlzbSBmb3IgYSBjbGllbnQgZGV2aWNlIHRvIHJlcXVlc3QgYSBzcGVjaWZpYyBRdWFsaXR5IG9mIFNlcnZpY2UgZnJvbSB0aGUgRE9DU0lTIG5ldHdvcmsuIEV4dGVuc2l2ZSBleGFtcGxlcyBpbGx1c3RyYXRlIHRoZSB1c2Ugb2YgdGhpcyBSZWNvbW1lbmRhdGlvbi4gVGhlIHNjb3BlIG9mIHRoaXMgUmVjb21tZW5kYXRpb24gaXMgdG8gZGVmaW5lIHRoZSBRb1MgQXJjaGl0ZWN0dXJlIGZvciB0aGUgIkFjY2VzcyIgcG9ydGlvbiBvZiB0aGUgSVBDYWJsZWNvbSBuZXR3b3JrLCBwcm92aWRlZCB0byByZXF1ZXN0aW5nIGFwcGxpY2F0aW9ucyBvbiBhIHBlci1mbG93IGJhc2lzLiBUaGUgYWNjZXNzIHBvcnRpb24gb2YgdGhlIG5ldHdvcmsgaXMgZGVmaW5lZCB0byBiZSBiZXR3ZWVuIHRoZSBNdWx0aS1tZWRpYSBUZXJtaW5hbCBBZGFwdGVyIChNVEEpIGFuZCB0aGUgQ2FibGUgTW9kZW0gVGVybWluYXRpb24gU3lzdGVtIChDTVRTKSwgaW5jbHVkaW5nIHRoZSBET0NTSVMgbmV0d29yay4gVGhlIG1ldGhvZCBvZiBRb1MgYWxsb2NhdGlvbiBvdmVyIHRoZSBiYWNrYm9uZSBpcyB1bnNwZWNpZmllZCBpbiB0aGlzIFJlY29tbWVuZGF0aW9uLiBJbnRlcmZhY2UgdG8gdGhlIG1hbmFnZWQgSVAgYmFja2JvbmUgYW5kIGlzc3VlcyByZWxhdGVkIHRvIElQIG11bHRpY2FzdCBhcmUgbm90IHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhpcyBSZWNvbW1lbmRhdGlvbi4gVGhpcyBSZWNvbW1lbmRhdGlvbiBhbHNvIHJlY29nbml6ZXMgdGhhdCBwZXItZmxvdyByZXNlcnZhdGlvbnMgbWF5IGJlIHJlcXVpcmVkIHdpdGhpbiB0aGUgY3VzdG9tZXIgcHJlbWlzZXMsIGFuZCB0aGUgcHJvdG9jb2wgZGV2ZWxvcGVkIGFkZHJlc3NlcyB0aGlzIHBvdGVudGlhbCBuZWVkLjwvZGl2PjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBzdHlsZT0iYm9yZGVyOiBzb2xpZCAxcHggIzAwMzM2NjsiPg0KIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjZWxsX2xlZnQiPkNpdGF0aW9uOjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY2VsbF9yaWdodCI+PHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl91Y19yZWNfbWFpbl9pbmZvMV9ycHRfbWFpbl9jdGwwMF9MYWJlbDYiPmh0dHA6Ly9oYW5kbGUuaXR1LmludC8xMS4xMDAyLzEwMDAvODY1NTwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNlbGxfbGVmdCI+QXBwcm92YWwgZGF0ZTo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNlbGxfcmlnaHQiPjxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fdWNfcmVjX21haW5faW5mbzFfcnB0X21haW5fY3RsMDBfTGFiZWw1Ij4yMDA1LTExLTI5PC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJjZWxsX2xlZnQiPlByb3Zpc2lvbmFsIG5hbWU6PC90ZD48dGQgY2xhc3M9ImNlbGxfcmlnaHQiPkouZHFvczwvdGQ+PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PHRkIGNsYXNzPSJjZWxsX2xlZnQiPkFwcHJvdmFsIHByb2Nlc3M6PC90ZD48dGQgY2xhc3M9ImNlbGxfcmlnaHQiPjxhIGhyZWY9Ii4uL2FhcC9BQVBSZWNEZXRhaWxzLmFzcHg/QUFQU2VxTm89MTA0MSIgdGl0bGU9IlNlZSBhbHRlcm5hdGl2ZSBhcHByb3ZhbCBwcm9jZXNzIGRldGFpbHMiPkFBUDwvYT48L3RkPjwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNlbGxfbGVmdCIgc3R5bGU9ImhlaWdodDogMTVweCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0dXM6PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjZWxsX3JpZ2h0IiBzdHlsZT0iaGVpZ2h0OiAxNXB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fdWNfcmVjX21haW5faW5mbzFfcnB0X21haW5fY3RsMDBfTGFiZWw3Ij5TdXBlcnNlZGVkPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY2VsbF9sZWZ0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1haW50ZW5hbmNlJm5ic3A7cmVzcG9uc2liaWxpdHk6PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjZWxsX3JpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fdWNfcmVjX21haW5faW5mbzFfcnB0X21haW5fY3RsMDBfTGFiZWw4Ij48YSBocmVmPSJodHRwOi8vd3d3Lml0dS5pbnQvSVRVLVQvYWJvdXQvZ3JvdXBzL1BhZ2VzL3NnMDkuYXNweCIgdGl0bGU9Ik1haW4gcGFnZSBvZiB0aGUgcmVzcGVjdGl2ZSBTdHVkeSBHcm91cCI+SVRVLVQgU3R1ZHkgR3JvdXAgOTwvYT48L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjZWxsX2xlZnQiIHZhbGlnbj0idG9wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZ1cnRoZXImbmJzcDtkZXRhaWxzOjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY2VsbF9yaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3JwdF9tYWluX2N0bDAwX0xhYmVsMSI+PGEgaHJlZj0iLi9yZWxhdGVkX3BzLmFzcHg/aWRfcHJvZD01Mzg4IiB0aXRsZT0iU2VlIGRlY2xhcmVkIHBhdGVudCBzdGF0ZW1lbnQocykiPlBhdGVudCBzdGF0ZW1lbnQocyk8L2E+PGJyLz48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3JwdF9tYWluX2N0bDAwX0xhYmVsMiI+PGEgaHJlZj0iLi4vd29ya3Byb2cvd3Bfc2VhcmNoLmFzcHg/aXNuX3Rhc2s9MTQxNCIgdGl0bGU9IlNlZSBvcmlnaW5hbCB3b3JrIGl0ZW0iPkRldmVsb3BtZW50IGhpc3Rvcnk8L2E+PGJyLz48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3JwdF9tYWluX2N0bDAwX0xhYmVsMyI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl91Y19yZWNfbWFpbl9pbmZvMV9ycHRfbWFpbl9jdGwwMF9MYWJlbDQiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgDQogICAgDQo8L2Rpdj4NCg0KPGRpdj4NCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdGwwMCRjb250ZW50X21haW4kdWNfcmVjX21haW5faW5mbzEkdHh0X2lkcmVjIiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3R4dF9pZHJlYyIgdmFsdWU9Ijg2NTUiIC8+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkY29udGVudF9tYWluJHVjX3JlY19tYWluX2luZm8xJHR4dF9pZHBhdHRlIiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3R4dF9pZHBhdHRlIiB2YWx1ZT0iLTEiIC8+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkY29udGVudF9tYWluJHVjX3JlY19tYWluX2luZm8xJHR4dF9sYW5nIiBpZD0iY3RsMDBfY29udGVudF9tYWluX3VjX3JlY19tYWluX2luZm8xX3R4dF9sYW5nIiB2YWx1ZT0iZW4iIC8+DQo8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KCQk8L3RyPg0KCQk8dHI+DQoJCQk8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMSI+DQoJCQkJPGRpdiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfaGVhZGVyIiBjbGFzcz0iYWpheF9fdGFiX2hlYWRlciI+DQoJCQkJCTxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl90YWIiIGNsYXNzPSJhamF4X190YWIiPjxzcGFuIGNsYXNzPSJhamF4X190YWJfb3V0ZXIiPjxzcGFuIGNsYXNzPSJhamF4X190YWJfaW5uZXIiPjxhIGNsYXNzPSJhamF4X190YWJfdGFiIiBpZD0iX190YWJfY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb24iIGhyZWY9IiMiPjxzcGFuPkVkaXRpb25zPC9zcGFuPjwvYT48L3NwYW4+PC9zcGFuPjwvc3Bhbj48c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF90YWIiIGNsYXNzPSJhamF4X190YWIiPjxzcGFuIGNsYXNzPSJhamF4X190YWJfb3V0ZXIiPjxzcGFuIGNsYXNzPSJhamF4X190YWJfaW5uZXIiPjxhIGNsYXNzPSJhamF4X190YWJfdGFiIiBpZD0iX190YWJfY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cCIgaHJlZj0iIyI+PHNwYW4+UmVsYXRlZCBTdXBwbGVtZW50KHMpPC9zcGFuPjwvYT48L3NwYW4+PC9zcGFuPjwvc3Bhbj4NCgkJCQk8L2Rpdj48ZGl2IGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV9ib2R5IiBjbGFzcz0iYWpheF9fdGFiX2JvZHkiIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyI+DQoJCQkJCTxkaXYgaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uIiBjbGFzcz0iYWpheF9fdGFiX3BhbmVsIj4NCgkJCQkJCQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX2Rpdl9yZWNfZGV0YWlscyI+DQogICAgPGRpdj4gICAgICAgDQogICAgICAgIDx0YWJsZSBzdHlsZT0iYm9yZGVyOiBzb2xpZCAxcHggIzAwMzM2NjsiPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtYWxpZ246bGVmdDsgaGVpZ2h0OiAzNXB4OyBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggYmxhY2siIHRpdGxlPSJFZGl0aW9uIG51bWJlciI+RWQuPC90ZD4NCiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWFsaWduOmxlZnQ7IGhlaWdodDogMzVweDsgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGJsYWNrIiB0aXRsZT0iUmVjb21tZW5kYXRpb24gbmFtZSI+SVRVLVQgUmVjb21tZW5kYXRpb248L3RkPg0KICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtYWxpZ246Y2VudGVyOyBoZWlnaHQ6IDM1cHg7IGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBibGFjayIgdGl0bGU9IlJlY29tbWVuZGF0aW9uIHN0YXR1cyI+U3RhdHVzPC90ZD4NCiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWFsaWduOmNlbnRlcjsgaGVpZ2h0OiAzNXB4OyBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggYmxhY2siIHRpdGxlPSJTZWUgc3VtbWFyeSI+U3VtbWFyeTwvdGQ+DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsgdGV4dC1hbGlnbjpjZW50ZXI7IGhlaWdodDogMzVweDsgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGJsYWNrIiB0aXRsZT0iU2VlIHRhYmxlIG9mIGNvbnRlbnRzIj5UYWJsZSBvZiBDb250ZW50czwvdGQ+DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsgdGV4dC1hbGlnbjpjZW50ZXI7IGhlaWdodDogMzVweDsgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGJsYWNrIiB0aXRsZT0iRG93bmxvYWQgUmVjb21tZW5kYXRpb24iPkRvd25sb2FkPC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IGJsYWNrICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMF9MYWJlbDgiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+PGI+NDwvYj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAwX2xibF90aXRsZSIgdGl0bGU9IkR5bmFtaWMgcXVhbGl0eSBvZiBzZXJ2aWNlIGZvciB0aGUgcHJvdmlzaW9uIG9mIHJlYWwtdGltZSBzZXJ2aWNlcyBvdmVyIGNhYmxlIHRlbGV2aXNpb24gbmV0d29ya3MgdXNpbmcgY2FibGUgbW9kZW1zIj48YSBocmVmPSIuL3JlYy5hc3B4P3JlYz05MzA2Jmxhbmc9ZW4iIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTsgY29sb3I6IGJsYWNrOyIgdGl0bGU9IkR5bmFtaWMgcXVhbGl0eSBvZiBzZXJ2aWNlIGZvciB0aGUgcHJvdmlzaW9uIG9mIHJlYWwtdGltZSBzZXJ2aWNlcyBvdmVyIGNhYmxlIHRlbGV2aXNpb24gbmV0d29ya3MgdXNpbmcgY2FibGUgbW9kZW1zIj5KLjE2MyAoMTIvMjAwNyk8L2E+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAwX2xibF9zdGF0dXMiPkluIGZvcmNlPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAwX2xibF9kbXMiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSBzdW1tYXJ5IiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDcxMi1JISFTVU0tSFRNLUUuaHRtJywgJ1N1bW1hcnknLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9ImJsdWUiPmhlcmU8L2ZvbnQ+PC9kaXY+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAwX0xhYmVsMyI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDcxMi1JISFUT0MtSFRNLUUuaHRtJywgJ1RvQycsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiBibGFjayAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDBfTGFiZWw0Ij48YSBocmVmPSIvcmVjL1QtUkVDLUouMTYzLTIwMDcxMi1JIiB0aXRsZT0iRG93bmxvYWQgZmlsZSIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IGNvbG9yOiBibHVlIj5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzAwNEI5NiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiB3aGl0ZSAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDFfTGFiZWw4IiB0aXRsZT0iRHluYW1pYyBxdWFsaXR5IG9mIHNlcnZpY2UgZm9yIHRoZSBwcm92aXNpb24gb2YgcmVhbC10aW1lIHNlcnZpY2VzIG92ZXIgY2FibGUgdGVsZXZpc2lvbiBuZXR3b3JrcyB1c2luZyBjYWJsZSBtb2RlbXMiPjxiPjM8L2I+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IHdoaXRlICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMV9sYmxfdGl0bGUiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+PGEgaHJlZj0iLi9yZWMuYXNweD9yZWM9ODY1NSZsYW5nPWVuIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiB3aGl0ZTsiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+Si4xNjMgKDExLzIwMDUpPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IHdoaXRlICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMV9sYmxfc3RhdHVzIj5TdXBlcnNlZGVkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogd2hpdGUgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAxX2xibF9kbXMiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSBzdW1tYXJ5IiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDUxMS1TISFTVU0tSFRNLUUuaHRtJywgJ1N1bW1hcnknLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9IndoaXRlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IHdoaXRlICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMV9MYWJlbDMiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLjE2My0yMDA1MTEtUyEhVE9DLUhUTS1FLmh0bScsICdUb0MnLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9IndoaXRlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IHdoaXRlICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMV9MYWJlbDQiPjxhIGhyZWY9Ii9yZWMvVC1SRUMtSi4xNjMtMjAwNTExLVMiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IHdoaXRlIj5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2U4ZThlOCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiBibGFjayAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDJfTGFiZWw4IiB0aXRsZT0iRHluYW1pYyBxdWFsaXR5IG9mIHNlcnZpY2UgZm9yIHRoZSBwcm92aXNpb24gb2YgcmVhbC10aW1lIHNlcnZpY2VzIG92ZXIgY2FibGUgdGVsZXZpc2lvbiBuZXR3b3JrcyB1c2luZyBjYWJsZSBtb2RlbXMiPjxiPjI8L2I+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IGJsYWNrICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMl9sYmxfdGl0bGUiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+PGEgaHJlZj0iLi9yZWMuYXNweD9yZWM9NzIwMCZsYW5nPWVuIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiBibGFjazsiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsLXRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+Si4xNjMgKDAzLzIwMDQpPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IGJsYWNrICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwMl9sYmxfc3RhdHVzIj5TdXBlcnNlZGVkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAyX2xibF9kbXMiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSBzdW1tYXJ5IiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDQwMy1TISFTVU0tSFRNLUUuaHRtJywgJ1N1bW1hcnknLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9ImJsdWUiPmhlcmU8L2ZvbnQ+PC9kaXY+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAyX0xhYmVsMyI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDQwMy1TISFUT0MtSFRNLUUuaHRtJywgJ1RvQycsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiBibGFjayAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDJfTGFiZWw0Ij48YSBocmVmPSIvcmVjL1QtUkVDLUouMTYzLTIwMDQwMy1TIiB0aXRsZT0iRG93bmxvYWQgZmlsZSIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IGNvbG9yOiBibHVlIj5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmOCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiBibGFjayAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDNfTGFiZWw4IiB0aXRsZT0iRHluYW1pYyBxdWFsaXR5IG9mIHNlcnZpY2UgZm9yIHRoZSBwcm92aXNpb24gb2YgcmVhbCB0aW1lIHNlcnZpY2VzIG92ZXIgY2FibGUgdGVsZXZpc2lvbiBuZXR3b3JrcyB1c2luZyBjYWJsZSBtb2RlbXMiPjxiPjE8L2I+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IGJsYWNrICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwM19sYmxfdGl0bGUiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsIHRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+PGEgaHJlZj0iLi9yZWMuYXNweD9yZWM9NTM4OCZsYW5nPWVuIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiBibGFjazsiIHRpdGxlPSJEeW5hbWljIHF1YWxpdHkgb2Ygc2VydmljZSBmb3IgdGhlIHByb3Zpc2lvbiBvZiByZWFsIHRpbWUgc2VydmljZXMgb3ZlciBjYWJsZSB0ZWxldmlzaW9uIG5ldHdvcmtzIHVzaW5nIGNhYmxlIG1vZGVtcyI+Si4xNjMgKDAzLzIwMDEpPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgY29sb3I6IGJsYWNrICI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV9ycHRfaGlzdG9yeV9jdGwwM19sYmxfc3RhdHVzIj5TdXBlcnNlZGVkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAzX2xibF9kbXMiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSBzdW1tYXJ5IiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDEwMy1TISFTVU0tSFRNLUUuaHRtJywgJ1N1bW1hcnknLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9ImJsdWUiPmhlcmU8L2ZvbnQ+PC9kaXY+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBjb2xvcjogYmxhY2sgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb25fdWNfcmVjX2RldGFpbHMxX3JwdF9oaXN0b3J5X2N0bDAzX0xhYmVsMyI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouMTYzLTIwMDEwMy1TISFUT0MtSFRNLUUuaHRtJywgJ1RvQycsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGNvbG9yOiBibGFjayAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfcnB0X2hpc3RvcnlfY3RsMDNfTGFiZWw0Ij48YSBocmVmPSIvcmVjL1QtUkVDLUouMTYzLTIwMDEwMy1TIiB0aXRsZT0iRG93bmxvYWQgZmlsZSIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IGNvbG9yOiBibHVlIj5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgDQogICAgICAgIDwvdGFibGU+DQogICAgICAgIA0KICAgIDwvZGl2Pg0KDQogICAgPGRpdj4NCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkY29udGVudF9tYWluJFRhYkNvbnRhaW5lcjEkdGFiX2VkaXRpb24kdWNfcmVjX2RldGFpbHMxJHR4dF9pZHJlYyIgaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9lZGl0aW9uX3VjX3JlY19kZXRhaWxzMV90eHRfaWRyZWMiIHZhbHVlPSI4NjU1IiAvPg0KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdGwwMCRjb250ZW50X21haW4kVGFiQ29udGFpbmVyMSR0YWJfZWRpdGlvbiR1Y19yZWNfZGV0YWlsczEkdHh0X2xhbmciIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfZWRpdGlvbl91Y19yZWNfZGV0YWlsczFfdHh0X2xhbmciIHZhbHVlPSJlbiIgLz4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KCQkJCQk8L2Rpdj48ZGl2IGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwIiB0YWJpbmRleD0iMSIgY2xhc3M9ImFqYXhfX3RhYl9wYW5lbCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPg0KCQkJCQkJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCjxkaXY+DQogICAgPHRhYmxlIHN0eWxlPSJib3JkZXI6IHNvbGlkIDFweCAjMDAzMzY2OyI+DQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI3IiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8IS0tIFNpbmNlIHRhYiBzaG91bGQgYmUgbWFya2VkIGFzIHZpc2libGU9ZmFsc2UgKGJlZm9yZSBlbmFibGVkPWZhbHNlIHdhcyBzdWZmaWNpZW50KSB0byBiZSBoaWRkZW4sIA0KICAgICAgICAgICAgICAgICAgICB0aGVyZSBpcyBhbiBpc3N1ZSB3aGVuIHRoZSB1c2VyIGlzIHVzaW5nIHRoaXMgYnV0dG9uIC0tPg0KICAgICAgICAgIDwvdGQ+DQogICAgICAgIDwvdHI+DQogICAgICAgIDx0ciBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9pZ3Nfcm93XzIiPg0KCQkJCQkJCTx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtYWxpZ246IGxlZnQ7IGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBibGFjayIgdGl0bGU9IlN1cHBsZW1lbnQgbmFtZSI+DQogICAgICAgICAgICAgICAgSVRVLVQgU3VwcGxlbWVudA0KICAgICAgICAgICAgPC90ZD4NCgkJCQkJCQk8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBibGFjayIgdGl0bGU9IlN1cHBsZW1lbnQgdGl0bGUiPg0KICAgICAgICAgICAgICAgIFRpdGxlDQogICAgICAgICAgICA8L3RkPg0KCQkJCQkJCTx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGJsYWNrIiB0aXRsZT0iU3VwcGxlbWVudCBzdGF0dXMiPg0KICAgICAgICAgICAgICAgIFN0YXR1cw0KICAgICAgICAgICAgPC90ZD4NCgkJCQkJCQk8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBibGFjayIgdGl0bGU9IlNlZSBzdW1tYXJ5Ij4NCiAgICAgICAgICAgICAgICBTdW1tYXJ5DQogICAgICAgICAgICA8L3RkPg0KCQkJCQkJCTx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGJsYWNrIiB0aXRsZT0iU2VlIHRhYmxlIG9mIGNvbnRlbnRzIj4NCiAgICAgICAgICAgICAgICBUYWJsZSBvZiBjb250ZW50cw0KICAgICAgICAgICAgPC90ZD4NCgkJCQkJCQk8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBibGFjayIgdGl0bGU9IkRvd25sb2FkIFN1cHBsZW1lbnQiPg0KICAgICAgICAgICAgICAgIERvd25sb2FkDQogICAgICAgICAgICA8L3RkPg0KCQkJCQkJPC90cj4NCgkJCQkJCQ0KICAgICAgICANCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDBfbGJsX2ltcF90aXRsZV9lIj48bm9icj48YSBocmVmPSIuL3JlYy5hc3B4P2lkPTQ2NTAmbGFuZz1lbiIgdGl0bGU9IkV4YW1wbGUgb2YgbGlua2luZyBvcHRpb25zIGJldHdlZW4gYW5uZXhlcyBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbiBKLjExMiBhbmQgYW5uZXhlcyBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbiBKLjgzIj5KIFN1cHBsLiAxICgxMS8xOTk4KTwvYT48L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAwX0xhYmVsMyIgdGl0bGU9IkV4YW1wbGUgb2YgbGlua2luZyBvcHRpb25zIGJldHdlZW4gYW5uZXhlcyBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbiBKLjExMiBhbmQgYW5uZXhlcyBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbiBKLjgzIj5FeGFtcGxlIG9mIGxpbmtpbmcgb3B0aW9ucyBiZXR3ZWVuIGFubmV4ZXMgb2YgSVRVLVQgUmVjb21tZW5kYXRpb24gSi4xMTIgYW5kIGFubmV4ZXMgb2YgSVRVLVQgUmVjb21tZW5kYXRpb24gSi44Mzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAwX0xhYmVsNCI+PG5vYnI+SW4gZm9yY2U8L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDBfbGJsX2ltcF9kbXNfbGluayI+LTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAwX0xhYmVsMSI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouU3VwMS0xOTk4MTEtSSEhVE9DLUhUTS1FLmh0bScsICdUb0MnLCd3aWR0aD01MDAsIGhlaWdodD00MDAsIHRvb2xiYXI9eWVzLCBsb2NhdGlvbj1ubywgZGlyZWN0b3JpZXM9bm8sIHN0YXR1cz1ubywgc2Nyb2xsYmFycz15ZXMsIHJlc2l6YWJsZT15ZXMsIGNvcHloaXN0b3J5PW5vJyk7IG5ld1dpbi5mb2N1cygpOyByZXR1cm4gZmFsc2U7Ij4NCgkJCQkJPGZvbnQgY29sb3I9ImJsdWUiPmhlcmU8L2ZvbnQ+PC9kaXY+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDBfTGFiZWwyIj48YSBocmVmPSIvcmVjL1QtUkVDLUouU3VwMS0xOTk4MTEtSSIgdGl0bGU9IkRvd25sb2FkIGZpbGUiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOyBjb2xvcjogYmx1ZTsiPmhlcmU8L2E+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDFfbGJsX2ltcF90aXRsZV9lIj48bm9icj48YSBocmVmPSIuL3JlYy5hc3B4P2lkPTQ2NTEmbGFuZz1lbiIgdGl0bGU9Ikd1aWRlbGluZXMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBhbm5leCBBIG9mIFJlY29tbWVuZGF0aW9uIEouMTEyLCAiVHJhbnNtaXNzaW9uIHN5c3RlbXMgZm9yIGludGVyYWN0aXZlIGNhYmxlIHRlbGV2aXNpb24gc2VydmljZXMiIOKAkyBFeGFtcGxlIG9mIGRpZ2l0YWwgdmlkZW8gYnJvYWRjYXN0aW5nIChEVkIpIGludGVyYWN0aW9uIGNoYW5uZWwgZm9yIGNhYmxlIHRlbGV2aXNpb24gZGlzdHJpYnV0aW9uIj5KIFN1cHBsLiAyICgxMS8xOTk4KTwvYT48L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAxX0xhYmVsMyIgdGl0bGU9Ikd1aWRlbGluZXMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBhbm5leCBBIG9mIFJlY29tbWVuZGF0aW9uIEouMTEyLCAmcXVvdDtUcmFuc21pc3Npb24gc3lzdGVtcyBmb3IgaW50ZXJhY3RpdmUgY2FibGUgdGVsZXZpc2lvbiBzZXJ2aWNlcyZxdW90OyDigJMgRXhhbXBsZSBvZiBkaWdpdGFsIHZpZGVvIGJyb2FkY2FzdGluZyAoRFZCKSBpbnRlcmFjdGlvbiBjaGFubmVsIGZvciBjYWJsZSB0ZWxldmlzaW9uIGRpc3RyaWJ1dGlvbiI+R3VpZGVsaW5lcyBmb3IgdGhlIGltcGxlbWVudGF0aW9uIG9mIGFubmV4IEEgb2YgUmVjb21tZW5kYXRpb24gSi4xMTIsICJUcmFuc21pc3Npb24gc3lzdGVtcyBmb3IgaW50ZXJhY3RpdmUgY2FibGUgdGVsZXZpc2lvbiBzZXJ2aWNlcyIg4oCTIEV4YW1wbGUgb2YgZGlnaXRhbCB2aWRlbyBicm9hZGNhc3RpbmcgKERWQikgaW50ZXJhY3Rpb24gY2hhbm5lbCBmb3IgY2FibGUgdGVsZXZpc2lvbiBkaXN0cmlidXRpb248L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwMV9MYWJlbDQiPjxub2JyPkluIGZvcmNlPC9ub2JyPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAxX2xibF9pbXBfZG1zX2xpbmsiPi08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwMV9MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDItMTk5ODExLUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAxX0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDItMTk5ODExLUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAyX2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD00NjUyJmxhbmc9ZW4iIHRpdGxlPSJHdWlkZWxpbmVzIGZvciB0aGUgaW1wbGVtZW50YXRpb24gb2YgUmVjb21tZW5kYXRpb24gSi4xMTEgIk5ldHdvcmsgaW5kZXBlbmRlbnQgcHJvdG9jb2xzIiDigJMgRXhhbXBsZSBvZiBkaWdpdGFsIHZpZGVvIGJyb2FkY2FzdGluZyAoRFZCKSBzeXN0ZW1zIGZvciBpbnRlcmFjdGl2ZSBzZXJ2aWNlcyI+SiBTdXBwbC4gMyAoMTEvMTk5OCk8L2E+PC9ub2JyPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwMl9MYWJlbDMiIHRpdGxlPSJHdWlkZWxpbmVzIGZvciB0aGUgaW1wbGVtZW50YXRpb24gb2YgUmVjb21tZW5kYXRpb24gSi4xMTEgJnF1b3Q7TmV0d29yayBpbmRlcGVuZGVudCBwcm90b2NvbHMmcXVvdDsg4oCTIEV4YW1wbGUgb2YgZGlnaXRhbCB2aWRlbyBicm9hZGNhc3RpbmcgKERWQikgc3lzdGVtcyBmb3IgaW50ZXJhY3RpdmUgc2VydmljZXMiPkd1aWRlbGluZXMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBSZWNvbW1lbmRhdGlvbiBKLjExMSAiTmV0d29yayBpbmRlcGVuZGVudCBwcm90b2NvbHMiIOKAkyBFeGFtcGxlIG9mIGRpZ2l0YWwgdmlkZW8gYnJvYWRjYXN0aW5nIChEVkIpIHN5c3RlbXMgZm9yIGludGVyYWN0aXZlIHNlcnZpY2VzPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDJfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwMl9sYmxfaW1wX2Rtc19saW5rIj4tPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDJfTGFiZWwxIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgdGFibGUgb2YgY29udGVudHMiIA0KCQkJCQlzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Ig0KCQkJCQlvbk1vdXNlT3Zlcj0idGhpcy5zdHlsZS5jdXJzb3I9J3BvaW50ZXInOyIgDQoJCQkJCW9uTW91c2VPdXQ9InRoaXMuc3R5bGUuY3Vyc29yPScnOyIgDQoJCQkJCW9uY2xpY2s9InRoaXMuc3R5bGUuY29sb3I9J3B1cnBsZSc7IHZhciBuZXdXaW4gPSB3aW5kb3cub3BlbignaHR0cDovL3d3dy5pdHUuaW50L2Rtc19wdWJyZWMvaXR1LXQvcmVjL2ovVC1SRUMtSi5TdXAzLTE5OTgxMS1JISFUT0MtSFRNLUUuaHRtJywgJ1RvQycsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwMl9MYWJlbDIiPjxhIGhyZWY9Ii9yZWMvVC1SRUMtSi5TdXAzLTE5OTgxMS1JIiB0aXRsZT0iRG93bmxvYWQgZmlsZSIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IGNvbG9yOiBibHVlOyI+aGVyZTwvYT48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwM19sYmxfaW1wX3RpdGxlX2UiPjxub2JyPjxhIGhyZWY9Ii4vcmVjLmFzcHg/aWQ9NTEzNSZsYW5nPWVuIiB0aXRsZT0iR3VpZGVsaW5lcyBvbiB0aGUgdXNlIG9mIHNvbWUgSVRVLVQgUmVjb21tZW5kYXRpb25zIGluIHRoZSBKIHNlcmllcyI+SiBTdXBwbC4gNSAoMDkvMTk5OSk8L2E+PC9ub2JyPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwM19MYWJlbDMiIHRpdGxlPSJHdWlkZWxpbmVzIG9uIHRoZSB1c2Ugb2Ygc29tZSBJVFUtVCBSZWNvbW1lbmRhdGlvbnMgaW4gdGhlIEogc2VyaWVzIj5HdWlkZWxpbmVzIG9uIHRoZSB1c2Ugb2Ygc29tZSBJVFUtVCBSZWNvbW1lbmRhdGlvbnMgaW4gdGhlIEogc2VyaWVzPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDNfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwM19sYmxfaW1wX2Rtc19saW5rIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgc3VtbWFyeSIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDUtMTk5OTA5LUkhIVNVTS1IVE0tRS5odG0nLCAnU3VtbWFyeScsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwM19MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDUtMTk5OTA5LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDAzX0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDUtMTk5OTA5LUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA0X2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD0xMzI0MSZsYW5nPWVuIiB0aXRsZT0iVWx0cmEgaGlnaCBkZWZpbml0aW9uIHRlbGV2aXNpb24gY2FibGUgdHJhbnNtaXNzaW9uIHdpdGggZnVuY3Rpb25zIGRlZmluZWQgaW4gUmVjb21tZW5kYXRpb25zIElUVS1UIEouMTgzLCBJVFUtVCBKLjI4OCBhbmQgSVRVLVQgSi45NCAiPkogU3VwcGwuIDYgKDA5LzIwMTYpPC9hPjwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDRfTGFiZWwzIiB0aXRsZT0iVWx0cmEgaGlnaCBkZWZpbml0aW9uIHRlbGV2aXNpb24gY2FibGUgdHJhbnNtaXNzaW9uIHdpdGggZnVuY3Rpb25zIGRlZmluZWQgaW4gUmVjb21tZW5kYXRpb25zIElUVS1UIEouMTgzLCBJVFUtVCBKLjI4OCBhbmQgSVRVLVQgSi45NCAiPlVsdHJhIGhpZ2ggZGVmaW5pdGlvbiB0ZWxldmlzaW9uIGNhYmxlIHRyYW5zbWlzc2lvbiB3aXRoIGZ1bmN0aW9ucyBkZWZpbmVkIGluIFJlY29tbWVuZGF0aW9ucyBJVFUtVCBKLjE4MywgSVRVLVQgSi4yODggYW5kIElUVS1UIEouOTQgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDRfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNF9sYmxfaW1wX2Rtc19saW5rIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgc3VtbWFyeSIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDYtMjAxNjA5LUkhIVNVTS1IVE0tRS5odG0nLCAnU3VtbWFyeScsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNF9MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDYtMjAxNjA5LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA0X0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDYtMjAxNjA5LUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA1X2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD0xNDI4NiZsYW5nPWVuIiB0aXRsZT0iRW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IEd1aWRlbGluZXMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBFQ0kiPkogU3VwcGwuIDcgKDA0LzIwMjApPC9hPjwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDVfTGFiZWwzIiB0aXRsZT0iRW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IEd1aWRlbGluZXMgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBFQ0kiPkVtYmVkZGVkIGNvbW1vbiBpbnRlcmZhY2UgZm9yIGV4Y2hhbmdlYWJsZSBDQS9EUk0gc29sdXRpb25zOyBHdWlkZWxpbmVzIGZvciB0aGUgaW1wbGVtZW50YXRpb24gb2YgRUNJPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDVfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNV9sYmxfaW1wX2Rtc19saW5rIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgc3VtbWFyeSIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDctMjAyMDA0LUkhIVNVTS1IVE0tRS5odG0nLCAnU3VtbWFyeScsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNV9MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDctMjAyMDA0LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA1X0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDctMjAyMDA0LUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA2X2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD0xNDI4NyZsYW5nPWVuIiB0aXRsZT0iRW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IFRydXN0IGVudmlyb25tZW50Ij5KIFN1cHBsLiA4ICgwNC8yMDIwKTwvYT48L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA2X0xhYmVsMyIgdGl0bGU9IkVtYmVkZGVkIGNvbW1vbiBpbnRlcmZhY2UgZm9yIGV4Y2hhbmdlYWJsZSBDQS9EUk0gc29sdXRpb25zOyBUcnVzdCBlbnZpcm9ubWVudCI+RW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IFRydXN0IGVudmlyb25tZW50PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDZfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNl9sYmxfaW1wX2Rtc19saW5rIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgc3VtbWFyeSIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDgtMjAyMDA0LUkhIVNVTS1IVE0tRS5odG0nLCAnU3VtbWFyeScsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwNl9MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDgtMjAyMDA0LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA2X0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDgtMjAyMDA0LUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA3X2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD0xNDI4OCZsYW5nPWVuIiB0aXRsZT0iRW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IFN5c3RlbSB2YWxpZGF0aW9uIj5KIFN1cHBsLiA5ICgwNC8yMDIwKTwvYT48L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA3X0xhYmVsMyIgdGl0bGU9IkVtYmVkZGVkIGNvbW1vbiBpbnRlcmZhY2UgZm9yIGV4Y2hhbmdlYWJsZSBDQS9EUk0gc29sdXRpb25zOyBTeXN0ZW0gdmFsaWRhdGlvbiI+RW1iZWRkZWQgY29tbW9uIGludGVyZmFjZSBmb3IgZXhjaGFuZ2VhYmxlIENBL0RSTSBzb2x1dGlvbnM7IFN5c3RlbSB2YWxpZGF0aW9uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDdfTGFiZWw0Ij48bm9icj5JbiBmb3JjZTwvbm9icj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwN19sYmxfaW1wX2Rtc19saW5rIj48ZGl2IHRpdGxlPSJDbGljayBoZXJlIHRvIHNlZSB0aGUgc3VtbWFyeSIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDktMjAyMDA0LUkhIVNVTS1IVE0tRS5odG0nLCAnU3VtbWFyeScsJ3dpZHRoPTUwMCwgaGVpZ2h0PTQwMCwgdG9vbGJhcj15ZXMsIGxvY2F0aW9uPW5vLCBkaXJlY3Rvcmllcz1ubywgc3RhdHVzPW5vLCBzY3JvbGxiYXJzPXllcywgcmVzaXphYmxlPXllcywgY29weWhpc3Rvcnk9bm8nKTsgbmV3V2luLmZvY3VzKCk7IHJldHVybiBmYWxzZTsiPg0KCQkJCQk8Zm9udCBjb2xvcj0iYmx1ZSI+aGVyZTwvZm9udD48L2Rpdj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfcnB0X3N1cF9jdGwwN19MYWJlbDEiPjxkaXYgdGl0bGU9IkNsaWNrIGhlcmUgdG8gc2VlIHRoZSB0YWJsZSBvZiBjb250ZW50cyIgDQoJCQkJCXN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiDQoJCQkJCW9uTW91c2VPdmVyPSJ0aGlzLnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7IiANCgkJCQkJb25Nb3VzZU91dD0idGhpcy5zdHlsZS5jdXJzb3I9Jyc7IiANCgkJCQkJb25jbGljaz0idGhpcy5zdHlsZS5jb2xvcj0ncHVycGxlJzsgdmFyIG5ld1dpbiA9IHdpbmRvdy5vcGVuKCdodHRwOi8vd3d3Lml0dS5pbnQvZG1zX3B1YnJlYy9pdHUtdC9yZWMvai9ULVJFQy1KLlN1cDktMjAyMDA0LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA3X0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDktMjAyMDA0LUkiIHRpdGxlPSJEb3dubG9hZCBmaWxlIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgY29sb3I6IGJsdWU7Ij5oZXJlPC9hPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA4X2xibF9pbXBfdGl0bGVfZSI+PG5vYnI+PGEgaHJlZj0iLi9yZWMuYXNweD9pZD0xNDI4OSZsYW5nPWVuIiB0aXRsZT0iQ29ycmVzcG9uZGVuY2UgYmV0d2VlbiBDYWJsZUxhYnMgRE9DU0lTIFNwZWNpZmljYXRpb25zIGFuZCBJVFUtVCBKLXNlcmllcyBSZWNvbW1lbmRhdGlvbnMiPkogU3VwcGwuIDEwICgwNC8yMDIwKTwvYT48L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGxlZnQ7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA4X0xhYmVsMyIgdGl0bGU9IkNvcnJlc3BvbmRlbmNlIGJldHdlZW4gQ2FibGVMYWJzIERPQ1NJUyBTcGVjaWZpY2F0aW9ucyBhbmQgSVRVLVQgSi1zZXJpZXMgUmVjb21tZW5kYXRpb25zIj5Db3JyZXNwb25kZW5jZSBiZXR3ZWVuIENhYmxlTGFicyBET0NTSVMgU3BlY2lmaWNhdGlvbnMgYW5kIElUVS1UIEotc2VyaWVzIFJlY29tbWVuZGF0aW9uczwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA4X0xhYmVsNCI+PG5vYnI+SW4gZm9yY2U8L25vYnI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgdmVydGljYWwtYWxpZ246IHRvcDsgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3JwdF9zdXBfY3RsMDhfbGJsX2ltcF9kbXNfbGluayI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHN1bW1hcnkiIA0KCQkJCQlzdHlsZT0idGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Ig0KCQkJCQlvbk1vdXNlT3Zlcj0idGhpcy5zdHlsZS5jdXJzb3I9J3BvaW50ZXInOyIgDQoJCQkJCW9uTW91c2VPdXQ9InRoaXMuc3R5bGUuY3Vyc29yPScnOyIgDQoJCQkJCW9uY2xpY2s9InRoaXMuc3R5bGUuY29sb3I9J3B1cnBsZSc7IHZhciBuZXdXaW4gPSB3aW5kb3cub3BlbignaHR0cDovL3d3dy5pdHUuaW50L2Rtc19wdWJyZWMvaXR1LXQvcmVjL2ovVC1SRUMtSi5TdXAxMC0yMDIwMDQtSSEhU1VNLUhUTS1FLmh0bScsICdTdW1tYXJ5Jywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA4X0xhYmVsMSI+PGRpdiB0aXRsZT0iQ2xpY2sgaGVyZSB0byBzZWUgdGhlIHRhYmxlIG9mIGNvbnRlbnRzIiANCgkJCQkJc3R5bGU9InRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyINCgkJCQkJb25Nb3VzZU92ZXI9InRoaXMuc3R5bGUuY3Vyc29yPSdwb2ludGVyJzsiIA0KCQkJCQlvbk1vdXNlT3V0PSJ0aGlzLnN0eWxlLmN1cnNvcj0nJzsiIA0KCQkJCQlvbmNsaWNrPSJ0aGlzLnN0eWxlLmNvbG9yPSdwdXJwbGUnOyB2YXIgbmV3V2luID0gd2luZG93Lm9wZW4oJ2h0dHA6Ly93d3cuaXR1LmludC9kbXNfcHVicmVjL2l0dS10L3JlYy9qL1QtUkVDLUouU3VwMTAtMjAyMDA0LUkhIVRPQy1IVE0tRS5odG0nLCAnVG9DJywnd2lkdGg9NTAwLCBoZWlnaHQ9NDAwLCB0b29sYmFyPXllcywgbG9jYXRpb249bm8sIGRpcmVjdG9yaWVzPW5vLCBzdGF0dXM9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCBjb3B5aGlzdG9yeT1ubycpOyBuZXdXaW4uZm9jdXMoKTsgcmV0dXJuIGZhbHNlOyI+DQoJCQkJCTxmb250IGNvbG9yPSJibHVlIj5oZXJlPC9mb250PjwvZGl2Pjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiB0b3A7ICI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV9ycHRfc3VwX2N0bDA4X0xhYmVsMiI+PGEgaHJlZj0iL3JlYy9ULVJFQy1KLlN1cDEwLTIwMjAwNC1JIiB0aXRsZT0iRG93bmxvYWQgZmlsZSIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7IGNvbG9yOiBibHVlOyI+aGVyZTwvYT48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgIA0KICAgICAgICANCiAgICA8L3RhYmxlPg0KPC9kaXY+DQo8ZGl2Pg0KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN0bDAwJGNvbnRlbnRfbWFpbiRUYWJDb250YWluZXIxJHRhYl9zdXAkdWNfcmVjX3N1cDEkdHh0X2lkcmVjIiBpZD0iY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cF91Y19yZWNfc3VwMV90eHRfaWRyZWMiIHZhbHVlPSI4NjU1IiAvPg0KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN0bDAwJGNvbnRlbnRfbWFpbiRUYWJDb250YWluZXIxJHRhYl9zdXAkdWNfcmVjX3N1cDEkdHh0X2xhbmciIGlkPSJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMV90YWJfc3VwX3VjX3JlY19zdXAxX3R4dF9sYW5nIiB2YWx1ZT0iZW4iIC8+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3RsMDAkY29udGVudF9tYWluJFRhYkNvbnRhaW5lcjEkdGFiX3N1cCR1Y19yZWNfc3VwMSRpc19lbXB0eSIgaWQ9ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXBfdWNfcmVjX3N1cDFfaXNfZW1wdHkiIHZhbHVlPSIwIiAvPg0KPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoJCQkJCTwvZGl2Pg0KCQkJCTwvZGl2Pg0KCQkJPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQoJCTwvdHI+DQoJPC90YWJsZT4NCgkNCiAgICAgICAgDQo8L2Rpdj4NCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICANCg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KLy88IVtDREFUQVsNCnZhciBjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51X0RhdGEgPSBuZXcgT2JqZWN0KCk7DQpjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51X0RhdGEuZGlzYXBwZWFyQWZ0ZXIgPSA1MDA7DQpjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51X0RhdGEuaG9yaXpvbnRhbE9mZnNldCA9IDA7DQpjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfbWFpbl9tZW51X0RhdGEudmVydGljYWxPZmZzZXQgPSAxMDsNClN5cy5BcHBsaWNhdGlvbi5hZGRfaW5pdChmdW5jdGlvbigpIHsNCiAgICAkY3JlYXRlKFN5cy5FeHRlbmRlZC5VSS5BdXRvQ29tcGxldGVCZWhhdmlvciwgeyJjb21wbGV0aW9uSW50ZXJ2YWwiOjQwMCwiY29tcGxldGlvbkxpc3RDc3NDbGFzcyI6ImF1dG9jb21wbGV0ZV9jb21wbGV0aW9uTGlzdEVsZW1lbnQiLCJjb21wbGV0aW9uTGlzdEl0ZW1Dc3NDbGFzcyI6ImF1dG9jb21wbGV0ZV9saXN0SXRlbSIsImNvbXBsZXRpb25TZXRDb3VudCI6NTAsImRlbGltaXRlckNoYXJhY3RlcnMiOiI7LDoiLCJoaWdobGlnaHRlZEl0ZW1Dc3NDbGFzcyI6ImF1dG9jb21wbGV0ZV9oaWdobGlnaHRlZExpc3RJdGVtIiwiaWQiOiJBdXRvQ29tcGxldGVFeCIsIm1pbmltdW1QcmVmaXhMZW5ndGgiOjEsInNlcnZpY2VNZXRob2QiOiJHZXRDb21wbGV0aW9uTGlzdCIsInNlcnZpY2VQYXRoIjoiQXV0b0NvbXBsZXRlLmFzbXgiLCJzaG93T25seUN1cnJlbnRXb3JkSW5Db21wbGV0aW9uTGlzdEl0ZW0iOnRydWV9LCBudWxsLCBudWxsLCAkZ2V0KCJjdGwwMF9jb250ZW50X21lbnVfdWNfcmVjX3NlYXJjaDFfdHh0X3JlYyIpKTsNCn0pOw0KU3lzLkFwcGxpY2F0aW9uLmFkZF9pbml0KGZ1bmN0aW9uKCkgew0KICAgICRjcmVhdGUoU3lzLkV4dGVuZGVkLlVJLlRhYlBhbmVsLCB7ImhlYWRlclRhYiI6JGdldCgiX190YWJfY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb24iKSwib3duZXJJRCI6ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxIiwid2FzTG9hZGVkT25jZSI6ZmFsc2V9LCBudWxsLCB7Im93bmVyIjoiY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjEifSwgJGdldCgiY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX2VkaXRpb24iKSk7DQp9KTsNClN5cy5BcHBsaWNhdGlvbi5hZGRfaW5pdChmdW5jdGlvbigpIHsNCiAgICAkY3JlYXRlKFN5cy5FeHRlbmRlZC5VSS5UYWJQYW5lbCwgeyJoZWFkZXJUYWIiOiRnZXQoIl9fdGFiX2N0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxX3RhYl9zdXAiKSwib3duZXJJRCI6ImN0bDAwX2NvbnRlbnRfbWFpbl9UYWJDb250YWluZXIxIiwid2FzTG9hZGVkT25jZSI6ZmFsc2V9LCBudWxsLCB7Im93bmVyIjoiY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjEifSwgJGdldCgiY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfdGFiX3N1cCIpKTsNCn0pOw0KU3lzLkFwcGxpY2F0aW9uLmFkZF9pbml0KGZ1bmN0aW9uKCkgew0KICAgICRjcmVhdGUoU3lzLkV4dGVuZGVkLlVJLlRhYkNvbnRhaW5lciwgeyJhY3RpdmVUYWJJbmRleCI6MCwiY2xpZW50U3RhdGVGaWVsZCI6JGdldCgiY3RsMDBfY29udGVudF9tYWluX1RhYkNvbnRhaW5lcjFfQ2xpZW50U3RhdGUiKSwib25EZW1hbmQiOmZhbHNlLCJzY3JvbGxCYXJzIjo0LCJ0YWJTdHJpcFBsYWNlbWVudCI6MCwidXNlVmVydGljYWxTdHJpcFBsYWNlbWVudCI6ZmFsc2V9LCBudWxsLCBudWxsLCAkZ2V0KCJjdGwwMF9jb250ZW50X21haW5fVGFiQ29udGFpbmVyMSIpKTsNCn0pOw0KLy9dXT4NCjwvc2NyaXB0Pg0KPC9mb3JtPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwhLS0vLmNvbnRhaW5lci0tPg0KDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGZvbGxvdyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xOCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY2xlYXJmaXgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgc3R5bGU9IndpZHRoOiA4MHB4OyB0ZXh0LWluZGVudDogMHB4OyBiYWNrZ3JvdW5kLWltYWdlOiBub25lOyIgaHJlZj0iL2VuL1BhZ2VzL3NvY2lhbC1tZWRpYS5hc3B4ICI+PGVtPkZvbGxvdyB1czwvZW0+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBjbGFzcz0idHdpdHRlciIgaHJlZj0iL3R3aXR0ZXIiPlR3aXR0ZXI8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGNsYXNzPSJmYWNlYm9vayIgaHJlZj0iL2ZhY2Vib29rIj5GYWNlYm9vazwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9InlvdXR1YmUiIGhyZWY9Ii95b3V0dWJlIj5Zb3VUdWJlPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBjbGFzcz0iZmxpY2tyIiBocmVmPSIvZmxpY2tyIj5GbGlja3I8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBjbGFzcz0ibGlua2VkaW4iIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L2ludGVybmF0aW9uYWwtdGVsZWNvbW11bmljYXRpb24tdW5pb24iIHJlbD0icHVibGlzaGVyIj5MaW5rZWRpbjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9Imluc3RhZ3JhbSIgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9pdHVvZmZpY2lhbC8iPkluc3RhZ3JhbTwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zb3VuZGNsb3VkLmNvbS9pdHVwcm9kdWN0aW9uL3RyYWNrcyIgY2xhc3M9InNvdW5kY2xvdWQiPlNvdW5kY2xvdWQ8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcG9kY2FzdHMuYXBwbGUuY29tL2NoL3BvZGNhc3QvaW50ZXJuYXRpb25hbC10ZWxlY29tbXVuaWNhdGlvbi11bmlvbi1pdHUvaWQxNDkxMDAxNDc0IiBjbGFzcz0iYXBwbGVwb2RjYXN0cyI+UG9kY2FzdHM8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vb3Blbi5zcG90aWZ5LmNvbS9lcGlzb2RlLzRFeXZnaE9wUnhMekszeElqeVN0MFA/c2k9aEFQemRqb25UTENWTTJLcS1NU1pRdyIgY2xhc3M9InNwb3RpZnkiPlNwb3RpZnk8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zcHJlYWtlciIgY2xhc3M9InNwcmVha2VyIiB0YXJnZXQ9Il9ibGFuayI+U3ByZWFrZXI8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vdm0udGlrdG9rLmNvbS9KZHhodUM0LyIgY2xhc3M9InRpa3RvayIgdGFyZ2V0PSJfYmxhbmsiPlRpa1RvazwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0vLnNvY2lhbC0tPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPCEtLS8uY29sLTE4LS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xNCI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tLy5jb2wtMTQtLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tLy5yb3ctLT4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyByb3ctYmFjay10by10b3AiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMzIgZm9vdGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xNiBjb2wtZmlyc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPiZjb3B5OyBJVFUgPHNwYW4gaWQ9ImNvcHlyaWdodF95ZWFyIj48L3NwYW4+QWxsIFJpZ2h0cyBSZXNlcnZlZDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLWNvbC0xNi0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTE2IGNvbC1sYXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImNsZWFyZml4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9ob21lL2NvbnRhY3QvaW5kZXguaHRtbCI+Q29udGFjdCB1czwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VuL2Fib3V0L1BhZ2VzL3ByaXZhY3ktbm90aWNlLmFzcHgiPlByaXZhY3kgbm90aWNlPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0vIGFkZGVkIGJ5IFJhamFuaSB2ZXBhIG9uIDEzIE1heSAyMDE5LS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZW4vUGFnZXMvYWNjZXNzaWJpbGl0eS5hc3B4Ij5BY2Nlc3NpYmlsaXR5PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBzdHlsZT0iY29sb3I6IHJlZDsgZm9udC13ZWlnaHQ6IGJvbGQ7IiBocmVmPSIvZW4vZXRoaWNzL1BhZ2VzL2hlbHBsaW5lLmFzcHgiPlJlcG9ydCBtaXNjb25kdWN0PC9hPjwvbGk+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tY29sLTE2LS0+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gY2hhbmdlZCB0aGUgY2xhc3MgYmFjayB0byB0b3AgVE8gR28tdG8tdG9wIGZvciBpdCB0byB3b3JrIG9uIDAxIEp1bHkgMjAxMiBSYWphbmkgVkVQQSBhbmQgYWxzbyBtb2RpZmllZCB0aGUgQ1NTICAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGEgaHJlZj0iIyIgY2xhc3M9ImJhY2stdG8tdG9wIj5CYWNrIHRvIHRvcDwvYT4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjVE9QIiBjbGFzcz0iZ28tdG8tdG9wIj5CYWNrIHRvIHRvcDwvYT4NCg0KDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8IS0tLy5jb2wtMzItLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tLy5yb3cgLmZvb3Rlci0tPg0KDQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwhLS0vLndyYXBwZXItLT4NCg0KICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL3M3LmFkZHRoaXMuY29tL2pzLzMwMC9hZGR0aGlzX3dpZGdldC5qcyNwdWJpZD1pdHVyc3MiPjwvc2NyaXB0Pg0KICAgICAgICAgICAgPCEtLSBJVFUgdGVtcGxhdGUgZW5kcyAtLT4NCiAgICAgICAgPC9kaXY+DQoNCiAgICA8L2Rpdj4NCg0KICAgIDxkaXYgaWQ9Il9hdHNzaCIgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbjsgaGVpZ2h0OiAxcHg7IHdpZHRoOiAxcHg7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAtOTk5OXB4OyB6LWluZGV4OiAxMDAwMDA7Ij4NCiAgICAgICAgPGlmcmFtZSBpZD0iX2F0c3NoNTc4IiB0aXRsZT0iQWRkVGhpcyB1dGlsaXR5IGZyYW1lIiBzcmM9Imh0dHA6Ly9zNy5hZGR0aGlzLmNvbS9zdGF0aWMvc2guNTE0NjQ4N2NjN2VhNGQ3YzAwOTMwZGZiLmh0bWwjcmFuZD0wLjk1ODk1MDY1NTA2OTIwMjImYW1wO2lpdD0xNDc5MjE5ODQxMTEzJmFtcDt0bXI9bG9hZCUzRDE0NzkyMTk4NDA4MDklMjZjb3JlJTNEMTQ3OTIxOTg0MTAxOCUyNm1haW4lM0QxNDc5MjE5ODQxMTA3JTI2aWZyJTNEMTQ3OTIxOTg0MTEyMiZhbXA7Y2I9MCZhbXA7Y2RuPTAmYW1wO21kPTAmYW1wO2t3PSZhbXA7YWI9LSZhbXA7ZGg9d3d3Lml0dS5pbnQmYW1wO2RyPSZhbXA7ZHU9aHR0cCUzQSUyRiUyRnd3dy5pdHUuaW50JTJGZW4lMkZJVFUtVCUyRnN0dWR5Z3JvdXBzJTJGMjAxMy0yMDE2JTJGMDUlMkZzZzVyZ2FmciUyRlBhZ2VzJTJGZGVmYXVsdC5hc3B4JmFtcDtocmVmPWh0dHAlM0ElMkYlMkZ3d3cuaXR1LmludCUyRmVuJTJGSVRVLVQlMkZzdHVkeWdyb3VwcyUyRjIwMTMtMjAxNiUyRjA1JTJGc2c1cmdhZnIlMkZQYWdlcyUyRmRlZmF1bHQuYXNweCZhbXA7ZHQ9SVRVLVQlMjBTRzUlMjBSZWdpb25hbCUyMEdyb3VwJTIwZm9yJTIwQWZyaWNhJTIwKFNHNSUyMFJHLUFGUikmYW1wO2RiZz0wJmFtcDtjYXA9dGMlM0QwJTI2YWIlM0QwJmFtcDtpbnN0PTEmYW1wO2pzbD0xJmFtcDtwcm9kPXVuZGVmaW5lZCZhbXA7bG5nPWVuJmFtcDtvZ3Q9YWRtaW5zJTJDc2l0ZV9uYW1lJmFtcDtwYz1tZW4mYW1wO3B1Yj1pdHVyc3MmYW1wO3NzbD0wJmFtcDtzaWQ9NTgyYjFhODA5OWU0YTUwZCZhbXA7c3JwbD0xJmFtcDtzcmY9MC4wMSZhbXA7c3J4PTEmYW1wO3Zlcj0zMDAmYW1wO3hjaz0wJmFtcDt4dHI9MCZhbXA7b2c9c2l0ZV9uYW1lJTNESVRVJTI2ZmIlMjUzQWFkbWlucyUzRCZhbXA7Y3NpPXVuZGVmaW5lZCZhbXA7cmV2PXY3LjcuMi13cCZhbXA7Y3Q9MSZhbXA7eGxkPTEmYW1wO3hkPTEiIHN0eWxlPSJoZWlnaHQ6IDFweDsgd2lkdGg6IDFweDsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDBweDsgei1pbmRleDogMTAwMDAwOyBib3JkZXI6IDBweDsgbGVmdDogMHB4OyI+PC9pZnJhbWU+DQogICAgPC9kaXY+DQoNCiAgICA8c3R5bGUgaWQ9InNlcnZpY2UtaWNvbnMtMCI+PC9zdHlsZT4NCiAgICA8IS0tIElUVSB0ZW1wbGF0ZSBzdGFydHMgOiBsYW5ndWFnZSBJTmRlcGVuZGVudCAtLT4NCiAgICA8Zm9ybSBhY3Rpb249Imh0dHA6Ly93d3cuaXR1LmludC9uZXQvaXR1X3NlYXJjaC9pbmRleC5hc3B4IiBuYW1lPSJzZWFyY2hmb3JtIj4NCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3giIHZhbHVlPSIwMDEyNzY4MjU0OTUxMzIyMzg2NjM6bnF6bTQ1ejg0NnEiIC8+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNvZiIgdmFsdWU9IkZPUklEOjkiIC8+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImllIiB2YWx1ZT0iVVRGLTgiIC8+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InEiIC8+DQogICAgPC9mb3JtPg0KDQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KICAgICAgICAvLzwhW0NEQVRBWw0KICAgICAgICBzZXRDb3B5UmlnaHRZZWFyKCk7DQogICAgICAgIC8vIEZpeCBmb3IgdGhlIG5hbWUuZGxsIEFjdGl0dmVYIGlzc3VlLg0KICAgICAgICBmdW5jdGlvbiBQcm9jZXNzSW1uKCkgeyB9DQogICAgICAgIC8vIDI3LjkuMjAxMw0KICAgICAgICAkKCJhIikucmVtb3ZlQ2xhc3MoIml0dS1uYXZoZWFkZXIiKTsNCiAgICAgICAgLy9dXT4NCiAgICA8L3NjcmlwdD4NCg0KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCiAgICAgICAgLyogSUUxMSBGaXggZm9yIFNQMjAxMCAqLw0KICAgICAgICBpZiAodHlwZW9mIChVc2VyQWdlbnRJbmZvKSAhPSAndW5kZWZpbmVkJyAmJiAhd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHsNCiAgICAgICAgICAgIFVzZXJBZ2VudEluZm8uc3RyQnJvd3NlciA9IDE7DQogICAgICAgIH0NCiAgICA8L3NjcmlwdD4NCjwvYm9keT4NCjwvaHRtbD4NCg0K
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:41 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/j/T-REC-J.163-200712-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:41 GMT
      Content-Type:
      - text/html
      Etag:
      - '"f084387b3ebfc81:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 26 May 2008 14:40:45 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<title>Summary - ITU-T Rec. J.163 (12/2007) Dynamic
        quality of service for the\r\nprovision of real-time services over cable television
        networks using cable\r\nmodems </title>\r\n<style>\r\n<!--\r\n \r\n-->\r\n</style>\r\n</head>\r\n\r\n<body>\r\n\r\n<div
        class=Section1>\r\n\r\n<table class=MsoNormalTable border=0 cellspacing=0
        cellpadding=0\r\n style='border-collapse:collapse;'>\r\n <tr>\r\n  <td width=\"100%\"
        valign=top style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a
        name=isume>Summary</a></h3>\r\n  <p class=MsoNormal>ITU-T\r\n  Recommendation
        J.163 addresses requirements for a client device to obtain\r\n  access to
        network resources. In particular, it specifies a comprehensive\r\n  mechanism
        for a client device to request a specific quality of service from\r\n  the
        DOCSIS network. Extensive examples illustrate the use of this\r\n  Recommendation.
        The scope of this Recommendation is to define the QoS architecture\r\n  for
        the &quot;Access&quot; portion of the IPCablecom network, provided to\r\n
        \ requesting applications on a per-flow basis. The access portion of the\r\n
        \ network is defined to be between the multimedia terminal adapter (MTA) and\r\n
        \ the cable modem termination system (CMTS), including the DOCSIS network.
        The\r\n  method of QoS allocation over the backbone is unspecified in this\r\n
        \ Recommendation. Interface to the managed IP backbone and issues related
        to IP\r\n  multicast are not within the scope of this Recommendation. This\r\n
        \ Recommendation also recognizes that per-flow reservations may be required\r\n
        \ within the customer premises, and the protocol developed addresses this\r\n
        \ potential need.</p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n<p
        class=MsoNormal align=left style='margin-top:0cm;text-align:left;'><br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br><br></p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:41 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=5388
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:42 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:43 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/j/T-REC-J.163-200712-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Wed, 14 Apr 2021 11:29:43 GMT
      Content-Type:
      - text/html
      Etag:
      - '"f084387b3ebfc81:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 26 May 2008 14:40:45 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<title>Summary - ITU-T Rec. J.163 (12/2007) Dynamic
        quality of service for the\r\nprovision of real-time services over cable television
        networks using cable\r\nmodems </title>\r\n<style>\r\n<!--\r\n \r\n-->\r\n</style>\r\n</head>\r\n\r\n<body>\r\n\r\n<div
        class=Section1>\r\n\r\n<table class=MsoNormalTable border=0 cellspacing=0
        cellpadding=0\r\n style='border-collapse:collapse;'>\r\n <tr>\r\n  <td width=\"100%\"
        valign=top style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a
        name=isume>Summary</a></h3>\r\n  <p class=MsoNormal>ITU-T\r\n  Recommendation
        J.163 addresses requirements for a client device to obtain\r\n  access to
        network resources. In particular, it specifies a comprehensive\r\n  mechanism
        for a client device to request a specific quality of service from\r\n  the
        DOCSIS network. Extensive examples illustrate the use of this\r\n  Recommendation.
        The scope of this Recommendation is to define the QoS architecture\r\n  for
        the &quot;Access&quot; portion of the IPCablecom network, provided to\r\n
        \ requesting applications on a per-flow basis. The access portion of the\r\n
        \ network is defined to be between the multimedia terminal adapter (MTA) and\r\n
        \ the cable modem termination system (CMTS), including the DOCSIS network.
        The\r\n  method of QoS allocation over the backbone is unspecified in this\r\n
        \ Recommendation. Interface to the managed IP backbone and issues related
        to IP\r\n  multicast are not within the scope of this Recommendation. This\r\n
        \ Recommendation also recognizes that per-flow reservations may be required\r\n
        \ within the customer premises, and the protocol developed addresses this\r\n
        \ potential need.</p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n<p
        class=MsoNormal align=left style='margin-top:0cm;text-align:left;'><br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br><br></p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Wed, 14 Apr 2021 11:29:43 GMT
recorded_with: VCR 5.0.0
